{"ast":null,"code":"var _jsxFileName = \"/Users/qdong/Desktop/Desktop1/Andy/dodgeball/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\n\n// Battle information and descriptions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst battleDescriptions = {\n  \"Ia Drang Valley\": {\n    title: \"Ia Drang Valley\",\n    year: \"1965\",\n    description: \"The Battle of Ia Drang was the first major engagement between U.S. forces and the North Vietnamese Army. The combat took place in the Central Highlands of South Vietnam as American troops were inserted by helicopter into a landing zone and soon came under attack from the North Vietnamese forces hiding in the surrounding jungle.\",\n    gameplay: \"Navigate through dense jungle terrain while avoiding enemy fire. Use the terrain for cover and conserve your energy for critical moments.\"\n  },\n  \"Khe Sanh\": {\n    title: \"Battle of Khe Sanh\",\n    year: \"1968\",\n    description: \"The Battle of Khe Sanh was a prolonged siege and one of the most publicized battles of the Vietnam War. U.S. Marines defended their base against intense attacks from North Vietnamese forces for 77 days. Located near the Laotian border, this remote outpost became a symbol of American determination and resilience during the war.\",\n    gameplay: \"Jump between scattered platforms representing the isolated hilltops of Khe Sanh. Time your movements carefully between the moving platforms while managing your shield against frequent enemy fire.\"\n  },\n  \"Hamburger Hill\": {\n    title: \"Battle of Hamburger Hill\",\n    year: \"1969\",\n    description: \"Also known as Hill 937, this battle consisted of a series of assaults by U.S. forces against a heavily fortified North Vietnamese position. The battle earned its grim nickname due to the high casualty rate, with soldiers describing the hill as a 'meat grinder.' Despite eventually capturing the hill, U.S. forces withdrew shortly after, raising questions about the battle's strategic value.\",\n    gameplay: \"Traverse the treacherous cave-like structures while avoiding stalactites and stalagmites. Watch for ambushes from enemy drones hiding in the shadows.\"\n  },\n  \"Hue City\": {\n    title: \"Battle of Hue\",\n    year: \"1968\",\n    description: \"During the Tet Offensive, North Vietnamese and Viet Cong forces captured the ancient imperial city of Hue. U.S. Marines and South Vietnamese troops fought block by block to reclaim the city in intense urban combat, resulting in some of the most fierce fighting of the war and significant civilian casualties.\",\n    gameplay: \"Navigate through the urban fortress structures, using the moving platforms to cross between buildings. Watch for snipers positioned in the upper levels.\"\n  },\n  \"Tet Offensive\": {\n    title: \"Tet Offensive\",\n    year: \"1968\",\n    description: \"A coordinated series of surprise attacks launched by the North Vietnamese and Viet Cong against South Vietnamese and American forces during the Vietnamese lunar new year (Tet). Though militarily unsuccessful, the offensive shocked the American public and marked a turning point in U.S. public opinion about the war.\",\n    gameplay: \"Ascend the vertical urban landscape using elevators and bridges between buildings. This final level combines all the challenges from previous battlefields in the most difficult test of skill.\"\n  }\n};\n\n// Battle music tracks mapping\nconst battleMusic = {\n  \"Ia Drang Valley\": \"EveOfDestruction.mp3\",\n  \"Khe Sanh\": \"FortunateSon.mp3\",\n  \"Hamburger Hill\": \"GimmeShelter.mp3\",\n  \"Hue City\": \"McDonald.mp3\",\n  \"Tet Offensive\": \"TheAnimals.mp3\"\n};\n\n// Updated battle images with Unsplash URLs\nconst battleImages = {\n  \"Ia Drang Valley\": \"https://images.unsplash.com/photo-1519335337423-a3357c2cd12e?w=1200\",\n  \"Khe Sanh\": \"https://images.unsplash.com/photo-1518775053278-5a569f0be557?w=1200\",\n  \"Hamburger Hill\": \"https://images.unsplash.com/photo-1469827160215-9d29e96e72f4?w=1200\",\n  \"Hue City\": \"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=1200\",\n  \"Tet Offensive\": \"https://images.unsplash.com/photo-1534447677768-be436bb09401?w=1200\"\n};\nfunction App() {\n  _s();\n  const canvasRef = useRef(null);\n  const [gameState, setGameState] = useState('menu'); // 'menu', 'playing', 'gameOver', 'win', 'info'\n  const audioRef = useRef(null);\n\n  // Add a level state to track current level\n  const [currentLevel, setCurrentLevel] = useState(0);\n\n  // Add state for showing info/battle descriptions\n  const [showInfo, setShowInfo] = useState(false);\n  const [infoText, setInfoText] = useState(null);\n\n  // Camera/viewport settings\n  const [camera, setCamera] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // World size - much larger than viewport\n  const worldSize = {\n    width: 3000,\n    height: 2000\n  };\n\n  // Canvas/viewport size\n  const [canvasSize, setCanvasSize] = useState({\n    width: 1200,\n    height: 800\n  });\n\n  // Player properties\n  const [player, setPlayer] = useState({\n    x: 100,\n    y: 700,\n    vx: 0,\n    vy: 0,\n    radius: 15,\n    color: '#36f9f6',\n    // Bright cyan like n-gon\n    grounded: false,\n    jumping: false\n  });\n\n  // Mouse state for shield\n  const [mouse, setMouse] = useState({\n    down: false,\n    x: 0,\n    y: 0\n  });\n\n  // Energy for shield - depletes when holding shield\n  const [energy, setEnergy] = useState(100);\n\n  // Platforms - now set by level configuration\n  const [platforms, setPlatforms] = useState([]);\n\n  // Doors - now set by level configuration\n  const [doors, setDoors] = useState({\n    start: {\n      x: 50,\n      y: 1730,\n      width: 40,\n      height: 70,\n      color: '#2ecc71'\n    },\n    end: {\n      x: 2420,\n      y: 380,\n      width: 40,\n      height: 70,\n      color: '#e74c3c'\n    }\n  });\n\n  // Drones - now set by level configuration\n  const [drones, setDrones] = useState([]);\n\n  // Projectiles\n  const [projectiles, setProjectiles] = useState([]);\n\n  // Power-ups - now set by level configuration\n  const [powerUps, setPowerUps] = useState([]);\n\n  // Health\n  const [health, setHealth] = useState(100);\n\n  // Player stats for power-ups\n  const [playerStats, setPlayerStats] = useState({\n    speed: 5,\n    shield: false\n  });\n\n  // Key states\n  const [keys, setKeys] = useState({\n    up: false,\n    down: false,\n    left: false,\n    right: false,\n    space: false\n  });\n\n  // Physics constants\n  const gravity = 0.5;\n  const friction = 0.8;\n  const jumpForce = -12;\n\n  // Define level configurations - FIX: Match level index to name explicitly\n  const levels = [\n  // Level 0 - Ia Drang Valley\n  {\n    name: \"Ia Drang Valley\",\n    index: 0,\n    // Added index to ensure consistency\n    platforms: [\n    // Starting area\n    {\n      x: 0,\n      y: 1800,\n      width: 400,\n      height: 50,\n      color: '#444'\n    },\n    // Path 1 - going right\n    {\n      x: 500,\n      y: 1750,\n      width: 150,\n      height: 20,\n      color: '#ff55ee'\n    }, {\n      x: 750,\n      y: 1700,\n      width: 120,\n      height: 20,\n      color: '#55ffee'\n    }, {\n      x: 950,\n      y: 1650,\n      width: 180,\n      height: 20,\n      color: '#444'\n    },\n    // Path 2 - going up\n    {\n      x: 1200,\n      y: 1600,\n      width: 100,\n      height: 20,\n      color: '#ffff55'\n    }, {\n      x: 1100,\n      y: 1500,\n      width: 120,\n      height: 20,\n      color: '#444'\n    }, {\n      x: 1250,\n      y: 1400,\n      width: 150,\n      height: 20,\n      color: '#ff5555'\n    },\n    // Path 3 - going left\n    {\n      x: 1050,\n      y: 1300,\n      width: 180,\n      height: 20,\n      color: '#55ff55'\n    }, {\n      x: 800,\n      y: 1250,\n      width: 150,\n      height: 20,\n      color: '#444'\n    }, {\n      x: 550,\n      y: 1200,\n      width: 170,\n      height: 20,\n      color: '#5555ff'\n    },\n    // Path 4 - going up and right\n    {\n      x: 600,\n      y: 1100,\n      width: 120,\n      height: 20,\n      color: '#444'\n    }, {\n      x: 800,\n      y: 1000,\n      width: 130,\n      height: 20,\n      color: '#ff55ff'\n    }, {\n      x: 1000,\n      y: 900,\n      width: 150,\n      height: 20,\n      color: '#ff5555'\n    },\n    // Path 5 - going far right\n    {\n      x: 1300,\n      y: 850,\n      width: 180,\n      height: 20,\n      color: '#444'\n    }, {\n      x: 1600,\n      y: 800,\n      width: 200,\n      height: 20,\n      color: '#55ffff'\n    }, {\n      x: 1900,\n      y: 750,\n      width: 150,\n      height: 20,\n      color: '#ffff55'\n    },\n    // Path 6 - going down\n    {\n      x: 2200,\n      y: 800,\n      width: 120,\n      height: 20,\n      color: '#444'\n    }, {\n      x: 2150,\n      y: 900,\n      width: 130,\n      height: 20,\n      color: '#ff5555'\n    }, {\n      x: 2250,\n      y: 1000,\n      width: 140,\n      height: 20,\n      color: '#5555ff'\n    },\n    // Path 7 - going left\n    {\n      x: 2050,\n      y: 1050,\n      width: 150,\n      height: 20,\n      color: '#444'\n    }, {\n      x: 1800,\n      y: 1100,\n      width: 170,\n      height: 20,\n      color: '#55ff55'\n    }, {\n      x: 1550,\n      y: 1150,\n      width: 160,\n      height: 20,\n      color: '#ff55ff'\n    },\n    // Path 8 - final approach\n    {\n      x: 1600,\n      y: 1000,\n      width: 140,\n      height: 20,\n      color: '#444'\n    }, {\n      x: 1750,\n      y: 850,\n      width: 120,\n      height: 20,\n      color: '#ffff55'\n    }, {\n      x: 1900,\n      y: 700,\n      width: 130,\n      height: 20,\n      color: '#ff5555'\n    }, {\n      x: 2050,\n      y: 550,\n      width: 150,\n      height: 20,\n      color: '#444'\n    }, {\n      x: 2300,\n      y: 450,\n      width: 200,\n      height: 50,\n      color: '#55ffff'\n    },\n    // Moving platforms\n    {\n      x: 350,\n      y: 1650,\n      width: 80,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 2,\n      minX: 350,\n      maxX: 500\n    }, {\n      x: 900,\n      y: 1400,\n      width: 80,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 3,\n      minX: 900,\n      maxX: 1050\n    }, {\n      x: 1400,\n      y: 950,\n      width: 80,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 4,\n      minX: 1300,\n      maxX: 1500\n    }],\n    doors: {\n      start: {\n        x: 50,\n        y: 1730,\n        width: 40,\n        height: 70,\n        color: '#2ecc71'\n      },\n      end: {\n        x: 2420,\n        y: 380,\n        width: 40,\n        height: 70,\n        color: '#e74c3c'\n      }\n    },\n    drones: [\n    // Starting area drone (just one)\n    {\n      id: 1,\n      x: 200,\n      y: 1700,\n      vx: 1,\n      vy: 0,\n      radius: 12,\n      color: '#f55',\n      type: 'patroller',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 40\n    },\n    // Path 1 drone (reduced count)\n    {\n      id: 2,\n      x: 650,\n      y: 1650,\n      vx: 0,\n      vy: 1,\n      radius: 14,\n      color: '#f5f',\n      type: 'vertical',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 60\n    },\n    // Path 2 drone (spread out)\n    {\n      id: 3,\n      x: 1150,\n      y: 1450,\n      vx: 0,\n      vy: 0,\n      radius: 18,\n      color: '#5ff',\n      type: 'turret',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 30\n    },\n    // Path 3 drone\n    {\n      id: 4,\n      x: 750,\n      y: 1250,\n      vx: 1.2,\n      vy: 0.8,\n      radius: 15,\n      color: '#f95',\n      type: 'bouncer',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 40\n    },\n    // Path 4 drone\n    {\n      id: 5,\n      x: 700,\n      y: 1050,\n      vx: 0,\n      vy: 0,\n      radius: 18,\n      color: '#5f5',\n      type: 'turret',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 35\n    },\n    // Path 5 drones (spread out)\n    {\n      id: 6,\n      x: 1500,\n      y: 800,\n      vx: 1,\n      vy: 0,\n      radius: 13,\n      color: '#f55',\n      type: 'patroller',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 40\n    }, {\n      id: 7,\n      x: 1850,\n      y: 750,\n      vx: 0,\n      vy: 1,\n      radius: 16,\n      color: '#ff5',\n      type: 'vertical',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 50\n    },\n    // Path 6 & 7 drones (more spread)\n    {\n      id: 8,\n      x: 2150,\n      y: 850,\n      vx: 0,\n      vy: 0,\n      radius: 20,\n      color: '#5ff',\n      type: 'turret',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 25\n    }, {\n      id: 9,\n      x: 1800,\n      y: 1100,\n      vx: 1.5,\n      vy: 0,\n      radius: 14,\n      color: '#f95',\n      type: 'patroller',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 45\n    },\n    // Final approach drones (reduced number, more spread)\n    {\n      id: 10,\n      x: 1750,\n      y: 800,\n      vx: 1,\n      vy: 0,\n      radius: 14,\n      color: '#f55',\n      type: 'patroller',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 30\n    }, {\n      id: 11,\n      x: 2000,\n      y: 650,\n      vx: 0,\n      vy: 1,\n      radius: 13,\n      color: '#5f5',\n      type: 'vertical',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 35\n    },\n    // Boss drone near the exit\n    {\n      id: 12,\n      x: 2300,\n      y: 400,\n      vx: 0.5,\n      vy: 0.5,\n      radius: 22,\n      color: '#f55',\n      type: 'boss',\n      timer: 0,\n      shootTimer: 0,\n      health: 100,\n      shootSpeed: 20\n    }],\n    powerUps: [{\n      x: 150,\n      y: 1600,\n      radius: 10,\n      type: 'health',\n      color: '#2ecc71',\n      active: true\n    }, {\n      x: 950,\n      y: 1600,\n      radius: 10,\n      type: 'energy',\n      color: '#3498db',\n      active: true\n    }, {\n      x: 1200,\n      y: 1350,\n      radius: 10,\n      type: 'health',\n      color: '#2ecc71',\n      active: true\n    }, {\n      x: 700,\n      y: 1150,\n      radius: 10,\n      type: 'energy',\n      color: '#3498db',\n      active: true\n    }, {\n      x: 1500,\n      y: 800,\n      radius: 10,\n      type: 'health',\n      color: '#2ecc71',\n      active: true\n    }, {\n      x: 2000,\n      y: 700,\n      radius: 10,\n      type: 'energy',\n      color: '#3498db',\n      active: true\n    }]\n  },\n  // Level 1 - Khe Sanh\n  {\n    name: \"Khe Sanh\",\n    index: 1,\n    // Added index to ensure consistency\n    platforms: [\n    // Starting area\n    {\n      x: 100,\n      y: 1800,\n      width: 300,\n      height: 50,\n      color: '#444'\n    },\n    // Scattered island-like platforms\n    {\n      x: 600,\n      y: 1700,\n      width: 200,\n      height: 30,\n      color: '#55ffee'\n    }, {\n      x: 1000,\n      y: 1600,\n      width: 180,\n      height: 30,\n      color: '#ff55ee'\n    }, {\n      x: 1400,\n      y: 1500,\n      width: 220,\n      height: 30,\n      color: '#ffff55'\n    }, {\n      x: 800,\n      y: 1400,\n      width: 150,\n      height: 30,\n      color: '#444'\n    }, {\n      x: 1200,\n      y: 1300,\n      width: 180,\n      height: 30,\n      color: '#55ff55'\n    }, {\n      x: 1600,\n      y: 1200,\n      width: 200,\n      height: 30,\n      color: '#ff5555'\n    }, {\n      x: 1000,\n      y: 1100,\n      width: 170,\n      height: 30,\n      color: '#5555ff'\n    }, {\n      x: 1400,\n      y: 1000,\n      width: 190,\n      height: 30,\n      color: '#444'\n    }, {\n      x: 1800,\n      y: 900,\n      width: 210,\n      height: 30,\n      color: '#ff55ff'\n    }, {\n      x: 1500,\n      y: 800,\n      width: 180,\n      height: 30,\n      color: '#55ffff'\n    }, {\n      x: 1900,\n      y: 700,\n      width: 200,\n      height: 30,\n      color: '#ffff55'\n    }, {\n      x: 2200,\n      y: 600,\n      width: 220,\n      height: 30,\n      color: '#444'\n    },\n    // Moving platforms\n    {\n      x: 450,\n      y: 1750,\n      width: 100,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 2,\n      minX: 450,\n      maxX: 550\n    }, {\n      x: 850,\n      y: 1500,\n      width: 100,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 3,\n      minX: 850,\n      maxX: 950\n    }, {\n      x: 1300,\n      y: 1100,\n      width: 100,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 2,\n      minX: 1300,\n      maxX: 1400\n    }, {\n      x: 1700,\n      y: 800,\n      width: 100,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 3,\n      minX: 1700,\n      maxX: 1800\n    }, {\n      x: 2000,\n      y: 650,\n      width: 100,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 2,\n      minX: 2000,\n      maxX: 2100\n    }],\n    doors: {\n      start: {\n        x: 150,\n        y: 1730,\n        width: 40,\n        height: 70,\n        color: '#2ecc71'\n      },\n      end: {\n        x: 2250,\n        y: 530,\n        width: 40,\n        height: 70,\n        color: '#e74c3c'\n      }\n    },\n    drones: [{\n      id: 1,\n      x: 300,\n      y: 1700,\n      vx: 1,\n      vy: 0,\n      radius: 12,\n      color: '#f55',\n      type: 'patroller',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 40\n    }, {\n      id: 2,\n      x: 800,\n      y: 1650,\n      vx: 0,\n      vy: 1,\n      radius: 14,\n      color: '#f5f',\n      type: 'vertical',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 60\n    }, {\n      id: 3,\n      x: 1200,\n      y: 1550,\n      vx: 1.2,\n      vy: 0.8,\n      radius: 15,\n      color: '#f95',\n      type: 'bouncer',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 40\n    }, {\n      id: 4,\n      x: 900,\n      y: 1350,\n      vx: 0,\n      vy: 0,\n      radius: 18,\n      color: '#5ff',\n      type: 'turret',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 30\n    }, {\n      id: 5,\n      x: 1300,\n      y: 1250,\n      vx: 1,\n      vy: 0,\n      radius: 13,\n      color: '#f55',\n      type: 'patroller',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 40\n    }, {\n      id: 6,\n      x: 1100,\n      y: 1050,\n      vx: 0,\n      vy: 1,\n      radius: 14,\n      color: '#5f5',\n      type: 'vertical',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 35\n    }, {\n      id: 7,\n      x: 1600,\n      y: 950,\n      vx: 1.5,\n      vy: 0,\n      radius: 14,\n      color: '#f95',\n      type: 'patroller',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 45\n    }, {\n      id: 8,\n      x: 1600,\n      y: 750,\n      vx: 0,\n      vy: 0,\n      radius: 18,\n      color: '#5ff',\n      type: 'turret',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 25\n    }, {\n      id: 9,\n      x: 2000,\n      y: 650,\n      vx: 1.2,\n      vy: 0.8,\n      radius: 15,\n      color: '#55f',\n      type: 'bouncer',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 40\n    }, {\n      id: 10,\n      x: 2300,\n      y: 550,\n      vx: 0.5,\n      vy: 0.5,\n      radius: 22,\n      color: '#f55',\n      type: 'boss',\n      timer: 0,\n      shootTimer: 0,\n      health: 100,\n      shootSpeed: 20\n    }],\n    powerUps: [{\n      x: 250,\n      y: 1750,\n      radius: 10,\n      type: 'health',\n      color: '#2ecc71',\n      active: true\n    }, {\n      x: 700,\n      y: 1650,\n      radius: 10,\n      type: 'energy',\n      color: '#3498db',\n      active: true\n    }, {\n      x: 1100,\n      y: 1550,\n      radius: 10,\n      type: 'health',\n      color: '#2ecc71',\n      active: true\n    }, {\n      x: 900,\n      y: 1350,\n      radius: 10,\n      type: 'energy',\n      color: '#3498db',\n      active: true\n    }, {\n      x: 1500,\n      y: 1150,\n      radius: 10,\n      type: 'health',\n      color: '#2ecc71',\n      active: true\n    }, {\n      x: 1700,\n      y: 850,\n      radius: 10,\n      type: 'energy',\n      color: '#3498db',\n      active: true\n    }, {\n      x: 2100,\n      y: 650,\n      radius: 10,\n      type: 'health',\n      color: '#2ecc71',\n      active: true\n    }]\n  },\n  // Level 2 - Hamburger Hill\n  {\n    name: \"Hamburger Hill\",\n    index: 2,\n    // Added index to ensure consistency\n    platforms: [\n    // Starting platform\n    {\n      x: 50,\n      y: 1800,\n      width: 250,\n      height: 40,\n      color: '#444'\n    },\n    // Cave-like structures with crystal platforms\n    {\n      x: 400,\n      y: 1750,\n      width: 120,\n      height: 20,\n      color: '#55ffee'\n    }, {\n      x: 700,\n      y: 1650,\n      width: 150,\n      height: 20,\n      color: '#ff55ee'\n    },\n    // Stalactites and stalagmites\n    {\n      x: 550,\n      y: 1680,\n      width: 10,\n      height: 80,\n      color: '#444'\n    },\n    // Stalactite\n    {\n      x: 650,\n      y: 1680,\n      width: 10,\n      height: 100,\n      color: '#444'\n    },\n    // Stalactite\n    {\n      x: 900,\n      y: 1600,\n      width: 10,\n      height: 60,\n      color: '#444'\n    },\n    // Stalactite\n\n    // More platforms\n    {\n      x: 850,\n      y: 1600,\n      width: 180,\n      height: 20,\n      color: '#ff5555'\n    }, {\n      x: 1100,\n      y: 1550,\n      width: 150,\n      height: 20,\n      color: '#55ff55'\n    },\n    // More stalactites\n    {\n      x: 1000,\n      y: 1550,\n      width: 10,\n      height: 90,\n      color: '#444'\n    },\n    // Stalactite\n    {\n      x: 1200,\n      y: 1550,\n      width: 10,\n      height: 70,\n      color: '#444'\n    },\n    // Stalactite\n\n    // Continuing path\n    {\n      x: 1350,\n      y: 1500,\n      width: 130,\n      height: 20,\n      color: '#5555ff'\n    }, {\n      x: 1600,\n      y: 1450,\n      width: 140,\n      height: 20,\n      color: '#444'\n    }, {\n      x: 1850,\n      y: 1400,\n      width: 160,\n      height: 20,\n      color: '#ff55ff'\n    },\n    // Cave ceiling obstacles\n    {\n      x: 1500,\n      y: 1400,\n      width: 10,\n      height: 60,\n      color: '#444'\n    },\n    // Stalactite\n    {\n      x: 1750,\n      y: 1350,\n      width: 10,\n      height: 80,\n      color: '#444'\n    },\n    // Stalactite\n\n    // Lower cave section\n    {\n      x: 1700,\n      y: 1300,\n      width: 150,\n      height: 20,\n      color: '#55ffff'\n    }, {\n      x: 1400,\n      y: 1200,\n      width: 140,\n      height: 20,\n      color: '#ffff55'\n    }, {\n      x: 1100,\n      y: 1100,\n      width: 130,\n      height: 20,\n      color: '#ff5555'\n    }, {\n      x: 1300,\n      y: 1000,\n      width: 160,\n      height: 20,\n      color: '#444'\n    }, {\n      x: 1600,\n      y: 900,\n      width: 170,\n      height: 20,\n      color: '#55ff55'\n    }, {\n      x: 1900,\n      y: 800,\n      width: 180,\n      height: 20,\n      color: '#5555ff'\n    }, {\n      x: 2200,\n      y: 700,\n      width: 200,\n      height: 20,\n      color: '#ff55ee'\n    }, {\n      x: 2500,\n      y: 600,\n      width: 150,\n      height: 20,\n      color: '#55ffee'\n    },\n    // More ceiling formations\n    {\n      x: 1500,\n      y: 950,\n      width: 10,\n      height: 70,\n      color: '#444'\n    },\n    // Stalactite\n    {\n      x: 1800,\n      y: 850,\n      width: 10,\n      height: 90,\n      color: '#444'\n    },\n    // Stalactite\n    {\n      x: 2100,\n      y: 750,\n      width: 10,\n      height: 60,\n      color: '#444'\n    },\n    // Stalactite\n    {\n      x: 2400,\n      y: 650,\n      width: 10,\n      height: 80,\n      color: '#444'\n    },\n    // Stalactite\n\n    // Moving platforms - crystal slabs\n    {\n      x: 300,\n      y: 1700,\n      width: 80,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 2,\n      minX: 300,\n      maxX: 450\n    }, {\n      x: 950,\n      y: 1550,\n      width: 80,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 3,\n      minX: 950,\n      maxX: 1100\n    }, {\n      x: 1500,\n      y: 1350,\n      width: 80,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 2,\n      minX: 1500,\n      maxX: 1650\n    }, {\n      x: 1200,\n      y: 1050,\n      width: 80,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 2,\n      minX: 1200,\n      maxX: 1350\n    }, {\n      x: 2000,\n      y: 750,\n      width: 80,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 3,\n      minX: 2000,\n      maxX: 2150\n    }, {\n      x: 2350,\n      y: 650,\n      width: 80,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 2,\n      minX: 2350,\n      maxX: 2500\n    }],\n    doors: {\n      start: {\n        x: 100,\n        y: 1730,\n        width: 40,\n        height: 70,\n        color: '#2ecc71'\n      },\n      end: {\n        x: 2500,\n        y: 530,\n        width: 40,\n        height: 70,\n        color: '#e74c3c'\n      }\n    },\n    drones: [{\n      id: 1,\n      x: 400,\n      y: 1650,\n      vx: 1,\n      vy: 0,\n      radius: 12,\n      color: '#f55',\n      type: 'patroller',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 40\n    }, {\n      id: 2,\n      x: 750,\n      y: 1550,\n      vx: 0,\n      vy: 1,\n      radius: 14,\n      color: '#f5f',\n      type: 'vertical',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 60\n    }, {\n      id: 3,\n      x: 1150,\n      y: 1450,\n      vx: 1.2,\n      vy: 0.8,\n      radius: 15,\n      color: '#f95',\n      type: 'bouncer',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 40\n    }, {\n      id: 4,\n      x: 1450,\n      y: 1350,\n      vx: 0,\n      vy: 0,\n      radius: 18,\n      color: '#5ff',\n      type: 'turret',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 30\n    }, {\n      id: 5,\n      x: 1750,\n      y: 1250,\n      vx: 1,\n      vy: 0,\n      radius: 13,\n      color: '#f55',\n      type: 'patroller',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 40\n    }, {\n      id: 6,\n      x: 1500,\n      y: 1100,\n      vx: 0,\n      vy: 1,\n      radius: 14,\n      color: '#5f5',\n      type: 'vertical',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 35\n    }, {\n      id: 7,\n      x: 1700,\n      y: 850,\n      vx: 1.5,\n      vy: 0,\n      radius: 14,\n      color: '#f95',\n      type: 'patroller',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 45\n    }, {\n      id: 8,\n      x: 2100,\n      y: 650,\n      vx: 0,\n      vy: 0,\n      radius: 18,\n      color: '#5ff',\n      type: 'turret',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 25\n    }, {\n      id: 9,\n      x: 2400,\n      y: 550,\n      vx: 0.5,\n      vy: 0.5,\n      radius: 22,\n      color: '#f55',\n      type: 'boss',\n      timer: 0,\n      shootTimer: 0,\n      health: 100,\n      shootSpeed: 20\n    }],\n    powerUps: [{\n      x: 450,\n      y: 1700,\n      radius: 10,\n      type: 'health',\n      color: '#2ecc71',\n      active: true\n    }, {\n      x: 800,\n      y: 1600,\n      radius: 10,\n      type: 'energy',\n      color: '#3498db',\n      active: true\n    }, {\n      x: 1200,\n      y: 1500,\n      radius: 10,\n      type: 'health',\n      color: '#2ecc71',\n      active: true\n    }, {\n      x: 1550,\n      y: 1400,\n      radius: 10,\n      type: 'energy',\n      color: '#3498db',\n      active: true\n    }, {\n      x: 1300,\n      y: 1150,\n      radius: 10,\n      type: 'health',\n      color: '#2ecc71',\n      active: true\n    }, {\n      x: 1800,\n      y: 850,\n      radius: 10,\n      type: 'energy',\n      color: '#3498db',\n      active: true\n    }, {\n      x: 2300,\n      y: 650,\n      radius: 10,\n      type: 'health',\n      color: '#2ecc71',\n      active: true\n    }]\n  },\n  // Level 3 - Hue City\n  {\n    name: \"Hue City\",\n    index: 3,\n    // Added index to ensure consistency\n    platforms: [\n    // Starting platform\n    {\n      x: 150,\n      y: 1800,\n      width: 200,\n      height: 30,\n      color: '#444'\n    },\n    // Platforms arranged in a fortress-like structure\n    // Outer walls\n    {\n      x: 450,\n      y: 1750,\n      width: 300,\n      height: 20,\n      color: '#55ffee'\n    },\n    // Bottom wall\n    {\n      x: 450,\n      y: 1650,\n      width: 20,\n      height: 100,\n      color: '#55ffee'\n    },\n    // Left wall\n    {\n      x: 730,\n      y: 1650,\n      width: 20,\n      height: 100,\n      color: '#55ffee'\n    },\n    // Right wall\n\n    // Inner fortress\n    {\n      x: 500,\n      y: 1700,\n      width: 200,\n      height: 20,\n      color: '#ff55ee'\n    },\n    // Platform\n    {\n      x: 550,\n      y: 1650,\n      width: 100,\n      height: 20,\n      color: '#ff55ee'\n    },\n    // Platform\n\n    // Connection platform\n    {\n      x: 350,\n      y: 1600,\n      width: 80,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 3,\n      minX: 350,\n      maxX: 450\n    },\n    // Second fortress section\n    {\n      x: 850,\n      y: 1600,\n      width: 300,\n      height: 20,\n      color: '#ffff55'\n    },\n    // Bottom wall\n    {\n      x: 850,\n      y: 1500,\n      width: 20,\n      height: 100,\n      color: '#ffff55'\n    },\n    // Left wall\n    {\n      x: 1130,\n      y: 1500,\n      width: 20,\n      height: 100,\n      color: '#ffff55'\n    },\n    // Right wall\n\n    // Inner platforms\n    {\n      x: 900,\n      y: 1550,\n      width: 200,\n      height: 20,\n      color: '#ff5555'\n    },\n    // Platform\n    {\n      x: 950,\n      y: 1500,\n      width: 100,\n      height: 20,\n      color: '#ff5555'\n    },\n    // Platform\n\n    // Connection platform\n    {\n      x: 750,\n      y: 1550,\n      width: 80,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 2,\n      minX: 750,\n      maxX: 850\n    },\n    // Third fortress section\n    {\n      x: 1250,\n      y: 1450,\n      width: 300,\n      height: 20,\n      color: '#55ff55'\n    },\n    // Bottom wall\n    {\n      x: 1250,\n      y: 1350,\n      width: 20,\n      height: 100,\n      color: '#55ff55'\n    },\n    // Left wall\n    {\n      x: 1530,\n      y: 1350,\n      width: 20,\n      height: 100,\n      color: '#55ff55'\n    },\n    // Right wall\n\n    // Inner platforms\n    {\n      x: 1300,\n      y: 1400,\n      width: 200,\n      height: 20,\n      color: '#5555ff'\n    },\n    // Platform\n    {\n      x: 1350,\n      y: 1350,\n      width: 100,\n      height: 20,\n      color: '#5555ff'\n    },\n    // Platform\n\n    // Connection platform\n    {\n      x: 1150,\n      y: 1400,\n      width: 80,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 3,\n      minX: 1150,\n      maxX: 1250\n    },\n    // Fourth fortress section\n    {\n      x: 1650,\n      y: 1300,\n      width: 300,\n      height: 20,\n      color: '#ff55ff'\n    },\n    // Bottom wall\n    {\n      x: 1650,\n      y: 1200,\n      width: 20,\n      height: 100,\n      color: '#ff55ff'\n    },\n    // Left wall\n    {\n      x: 1930,\n      y: 1200,\n      width: 20,\n      height: 100,\n      color: '#ff55ff'\n    },\n    // Right wall\n\n    // Inner platforms\n    {\n      x: 1700,\n      y: 1250,\n      width: 200,\n      height: 20,\n      color: '#55ffff'\n    },\n    // Platform\n    {\n      x: 1750,\n      y: 1200,\n      width: 100,\n      height: 20,\n      color: '#55ffff'\n    },\n    // Platform\n\n    // Connection platform\n    {\n      x: 1550,\n      y: 1250,\n      width: 80,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 2,\n      minX: 1550,\n      maxX: 1650\n    },\n    // Fifth fortress section\n    {\n      x: 2050,\n      y: 1150,\n      width: 300,\n      height: 20,\n      color: '#ffff55'\n    },\n    // Bottom wall\n    {\n      x: 2050,\n      y: 1050,\n      width: 20,\n      height: 100,\n      color: '#ffff55'\n    },\n    // Left wall\n    {\n      x: 2330,\n      y: 1050,\n      width: 20,\n      height: 100,\n      color: '#ffff55'\n    },\n    // Right wall\n\n    // Inner platforms\n    {\n      x: 2100,\n      y: 1100,\n      width: 200,\n      height: 20,\n      color: '#ff5555'\n    },\n    // Platform\n    {\n      x: 2150,\n      y: 1050,\n      width: 100,\n      height: 20,\n      color: '#ff5555'\n    },\n    // Platform\n\n    // Connection platform\n    {\n      x: 1950,\n      y: 1100,\n      width: 80,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 3,\n      minX: 1950,\n      maxX: 2050\n    },\n    // Final section with boss area\n    {\n      x: 2150,\n      y: 900,\n      width: 400,\n      height: 20,\n      color: '#55ff55'\n    },\n    // Bottom platform\n    {\n      x: 2150,\n      y: 750,\n      width: 20,\n      height: 150,\n      color: '#55ff55'\n    },\n    // Left wall\n    {\n      x: 2530,\n      y: 750,\n      width: 20,\n      height: 150,\n      color: '#55ff55'\n    },\n    // Right wall\n    {\n      x: 2150,\n      y: 750,\n      width: 400,\n      height: 20,\n      color: '#55ff55'\n    } // Top wall\n    ],\n    doors: {\n      start: {\n        x: 200,\n        y: 1730,\n        width: 40,\n        height: 70,\n        color: '#2ecc71'\n      },\n      end: {\n        x: 2300,\n        y: 780,\n        width: 40,\n        height: 70,\n        color: '#e74c3c'\n      }\n    },\n    drones: [{\n      id: 1,\n      x: 500,\n      y: 1700,\n      vx: 1,\n      vy: 0,\n      radius: 12,\n      color: '#f55',\n      type: 'patroller',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 40\n    }, {\n      id: 2,\n      x: 900,\n      y: 1550,\n      vx: 0,\n      vy: 1,\n      radius: 14,\n      color: '#f5f',\n      type: 'vertical',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 60\n    }, {\n      id: 3,\n      x: 1300,\n      y: 1400,\n      vx: 1.2,\n      vy: 0.8,\n      radius: 15,\n      color: '#f95',\n      type: 'bouncer',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 40\n    }, {\n      id: 4,\n      x: 1700,\n      y: 1250,\n      vx: 0,\n      vy: 0,\n      radius: 18,\n      color: '#5ff',\n      type: 'turret',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 30\n    }, {\n      id: 5,\n      x: 2100,\n      y: 1100,\n      vx: 1,\n      vy: 0,\n      radius: 13,\n      color: '#f55',\n      type: 'patroller',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 40\n    }, {\n      id: 6,\n      x: 2200,\n      y: 950,\n      vx: 0,\n      vy: 1,\n      radius: 14,\n      color: '#5f5',\n      type: 'vertical',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 35\n    }, {\n      id: 7,\n      x: 2400,\n      y: 850,\n      vx: 0,\n      vy: 0,\n      radius: 18,\n      color: '#5ff',\n      type: 'turret',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 30\n    }, {\n      id: 8,\n      x: 2300,\n      y: 850,\n      vx: 0.5,\n      vy: 0.5,\n      radius: 22,\n      color: '#f55',\n      type: 'boss',\n      timer: 0,\n      shootTimer: 0,\n      health: 100,\n      shootSpeed: 20\n    }],\n    powerUps: [{\n      x: 550,\n      y: 1700,\n      radius: 10,\n      type: 'health',\n      color: '#2ecc71',\n      active: true\n    }, {\n      x: 950,\n      y: 1550,\n      radius: 10,\n      type: 'energy',\n      color: '#3498db',\n      active: true\n    }, {\n      x: 1350,\n      y: 1400,\n      radius: 10,\n      type: 'health',\n      color: '#2ecc71',\n      active: true\n    }, {\n      x: 1750,\n      y: 1250,\n      radius: 10,\n      type: 'energy',\n      color: '#3498db',\n      active: true\n    }, {\n      x: 2150,\n      y: 1100,\n      radius: 10,\n      type: 'health',\n      color: '#2ecc71',\n      active: true\n    }, {\n      x: 2300,\n      y: 900,\n      radius: 10,\n      type: 'energy',\n      color: '#3498db',\n      active: true\n    }]\n  },\n  // Level 4 - Tet Offensive\n  {\n    name: \"Tet Offensive\",\n    index: 4,\n    // Added index to ensure consistency\n    platforms: [\n    // Starting platform\n    {\n      x: 100,\n      y: 1800,\n      width: 300,\n      height: 40,\n      color: '#444'\n    },\n    // Buildings with neon colors\n    // Building 1\n    {\n      x: 550,\n      y: 1750,\n      width: 100,\n      height: 200,\n      color: '#ff55ee'\n    },\n    // Bridge 1\n    {\n      x: 400,\n      y: 1700,\n      width: 150,\n      height: 15,\n      color: '#ffff55'\n    },\n    // Building 2\n    {\n      x: 750,\n      y: 1700,\n      width: 120,\n      height: 250,\n      color: '#55ffee'\n    },\n    // Bridge 2\n    {\n      x: 650,\n      y: 1650,\n      width: 100,\n      height: 15,\n      color: '#ffff55'\n    },\n    // Building 3\n    {\n      x: 950,\n      y: 1650,\n      width: 150,\n      height: 300,\n      color: '#ff5555'\n    },\n    // Bridge 3\n    {\n      x: 870,\n      y: 1600,\n      width: 80,\n      height: 15,\n      color: '#ffff55'\n    },\n    // Building 4\n    {\n      x: 1200,\n      y: 1600,\n      width: 130,\n      height: 350,\n      color: '#55ff55'\n    },\n    // Bridge 4\n    {\n      x: 1100,\n      y: 1550,\n      width: 100,\n      height: 15,\n      color: '#ffff55'\n    },\n    // Building 5\n    {\n      x: 1450,\n      y: 1550,\n      width: 120,\n      height: 400,\n      color: '#5555ff'\n    },\n    // Bridge 5\n    {\n      x: 1330,\n      y: 1500,\n      width: 120,\n      height: 15,\n      color: '#ffff55'\n    },\n    // Building 6\n    {\n      x: 1700,\n      y: 1500,\n      width: 140,\n      height: 450,\n      color: '#ff55ff'\n    },\n    // Bridge 6\n    {\n      x: 1570,\n      y: 1450,\n      width: 130,\n      height: 15,\n      color: '#ffff55'\n    },\n    // Building 7\n    {\n      x: 1950,\n      y: 1450,\n      width: 160,\n      height: 500,\n      color: '#55ffff'\n    },\n    // Bridge 7\n    {\n      x: 1840,\n      y: 1400,\n      width: 110,\n      height: 15,\n      color: '#ffff55'\n    },\n    // Building 8\n    {\n      x: 2200,\n      y: 1400,\n      width: 180,\n      height: 550,\n      color: '#ffff55'\n    },\n    // Bridge 8\n    {\n      x: 2110,\n      y: 1350,\n      width: 90,\n      height: 15,\n      color: '#ffff55'\n    },\n    // Building 9\n    {\n      x: 2450,\n      y: 1350,\n      width: 200,\n      height: 600,\n      color: '#ff5555'\n    },\n    // Bridge 9\n    {\n      x: 2380,\n      y: 1300,\n      width: 70,\n      height: 15,\n      color: '#ffff55'\n    },\n    // Moving platforms (elevators)\n    {\n      x: 600,\n      y: 1500,\n      width: 50,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 2,\n      minX: 600,\n      maxX: 600,\n      minY: 1500,\n      maxY: 1700,\n      vertical: true\n    }, {\n      x: 800,\n      y: 1450,\n      width: 50,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 2,\n      minX: 800,\n      maxX: 800,\n      minY: 1450,\n      maxY: 1650,\n      vertical: true\n    }, {\n      x: 1000,\n      y: 1350,\n      width: 50,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 3,\n      minX: 1000,\n      maxX: 1000,\n      minY: 1350,\n      maxY: 1600,\n      vertical: true\n    }, {\n      x: 1250,\n      y: 1250,\n      width: 50,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 3,\n      minX: 1250,\n      maxX: 1250,\n      minY: 1250,\n      maxY: 1550,\n      vertical: true\n    }, {\n      x: 1500,\n      y: 1150,\n      width: 50,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 4,\n      minX: 1500,\n      maxX: 1500,\n      minY: 1150,\n      maxY: 1500,\n      vertical: true\n    }, {\n      x: 1750,\n      y: 1050,\n      width: 50,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 4,\n      minX: 1750,\n      maxX: 1750,\n      minY: 1050,\n      maxY: 1450,\n      vertical: true\n    }, {\n      x: 2000,\n      y: 950,\n      width: 50,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 5,\n      minX: 2000,\n      maxX: 2000,\n      minY: 950,\n      maxY: 1400,\n      vertical: true\n    }, {\n      x: 2250,\n      y: 850,\n      width: 50,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 5,\n      minX: 2250,\n      maxX: 2250,\n      minY: 850,\n      maxY: 1350,\n      vertical: true\n    }, {\n      x: 2500,\n      y: 750,\n      width: 50,\n      height: 15,\n      color: '#ff9500',\n      movingPlatform: true,\n      direction: 1,\n      speed: 6,\n      minX: 2500,\n      maxX: 2500,\n      minY: 750,\n      maxY: 1300,\n      vertical: true\n    }],\n    doors: {\n      start: {\n        x: 150,\n        y: 1730,\n        width: 40,\n        height: 70,\n        color: '#2ecc71'\n      },\n      end: {\n        x: 2500,\n        y: 680,\n        width: 40,\n        height: 70,\n        color: '#e74c3c'\n      }\n    },\n    drones: [{\n      id: 1,\n      x: 600,\n      y: 1650,\n      vx: 1,\n      vy: 0,\n      radius: 12,\n      color: '#f55',\n      type: 'patroller',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 40\n    }, {\n      id: 2,\n      x: 850,\n      y: 1600,\n      vx: 0,\n      vy: 1,\n      radius: 14,\n      color: '#f5f',\n      type: 'vertical',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 60\n    }, {\n      id: 3,\n      x: 1050,\n      y: 1550,\n      vx: 1.2,\n      vy: 0.8,\n      radius: 15,\n      color: '#f95',\n      type: 'bouncer',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 40\n    }, {\n      id: 4,\n      x: 1300,\n      y: 1450,\n      vx: 0,\n      vy: 0,\n      radius: 18,\n      color: '#5ff',\n      type: 'turret',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 30\n    }, {\n      id: 5,\n      x: 1550,\n      y: 1350,\n      vx: 1,\n      vy: 0,\n      radius: 13,\n      color: '#f55',\n      type: 'patroller',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 40\n    }, {\n      id: 6,\n      x: 1800,\n      y: 1250,\n      vx: 0,\n      vy: 1,\n      radius: 14,\n      color: '#5f5',\n      type: 'vertical',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 35\n    }, {\n      id: 7,\n      x: 2050,\n      y: 1150,\n      vx: 1.5,\n      vy: 0,\n      radius: 14,\n      color: '#f95',\n      type: 'patroller',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 45\n    }, {\n      id: 8,\n      x: 2300,\n      y: 1050,\n      vx: 0,\n      vy: 0,\n      radius: 18,\n      color: '#5ff',\n      type: 'turret',\n      timer: 0,\n      shootTimer: 0,\n      shootSpeed: 25\n    }, {\n      id: 9,\n      x: 2500,\n      y: 850,\n      vx: 0.5,\n      vy: 0.5,\n      radius: 22,\n      color: '#f55',\n      type: 'boss',\n      timer: 0,\n      shootTimer: 0,\n      health: 100,\n      shootSpeed: 20\n    }],\n    powerUps: [{\n      x: 600,\n      y: 1600,\n      radius: 10,\n      type: 'health',\n      color: '#2ecc71',\n      active: true\n    }, {\n      x: 900,\n      y: 1550,\n      radius: 10,\n      type: 'energy',\n      color: '#3498db',\n      active: true\n    }, {\n      x: 1200,\n      y: 1450,\n      radius: 10,\n      type: 'health',\n      color: '#2ecc71',\n      active: true\n    }, {\n      x: 1500,\n      y: 1350,\n      radius: 10,\n      type: 'energy',\n      color: '#3498db',\n      active: true\n    }, {\n      x: 1800,\n      y: 1200,\n      radius: 10,\n      type: 'health',\n      color: '#2ecc71',\n      active: true\n    }, {\n      x: 2100,\n      y: 1100,\n      radius: 10,\n      type: 'energy',\n      color: '#3498db',\n      active: true\n    }, {\n      x: 2400,\n      y: 950,\n      radius: 10,\n      type: 'health',\n      color: '#2ecc71',\n      active: true\n    }, {\n      x: 2550,\n      y: 850,\n      radius: 10,\n      type: 'energy',\n      color: '#3498db',\n      active: true\n    }]\n  }];\n\n  // Music functions\n  const playLevelMusic = levelName => {\n    if (!audioRef.current) {\n      audioRef.current = new Audio();\n    }\n\n    // Stop any currently playing music\n    stopMusic();\n\n    // Set the new music source\n    const musicTrack = battleMusic[levelName];\n    if (musicTrack) {\n      audioRef.current.src = `sounds/${musicTrack}`;\n      audioRef.current.loop = true;\n      audioRef.current.volume = 0.5;\n      audioRef.current.play().catch(e => console.log(\"Audio play failed:\", e));\n    }\n  };\n  const stopMusic = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n    }\n  };\n\n  // Handle canvas resize based on window size\n  useEffect(() => {\n    const handleResize = () => {\n      const maxWidth = Math.min(window.innerWidth - 40, 1200);\n      const maxHeight = Math.min(window.innerHeight - 100, 800);\n\n      // Maintain aspect ratio\n      const aspectRatio = 3 / 2;\n      let width = maxWidth;\n      let height = width / aspectRatio;\n      if (height > maxHeight) {\n        height = maxHeight;\n        width = height * aspectRatio;\n      }\n      setCanvasSize({\n        width,\n        height\n      });\n    };\n\n    // Set initial size\n    handleResize();\n\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n\n    // Clean up\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Handle keyboard input\n  useEffect(() => {\n    const handleKeyDown = event => {\n      switch (event.key) {\n        case 'ArrowUp':\n        case 'w':\n          setKeys(prev => ({\n            ...prev,\n            up: true\n          }));\n          break;\n        case 'ArrowDown':\n        case 's':\n          setKeys(prev => ({\n            ...prev,\n            down: true\n          }));\n          break;\n        case 'ArrowLeft':\n        case 'a':\n          setKeys(prev => ({\n            ...prev,\n            left: true\n          }));\n          break;\n        case 'ArrowRight':\n        case 'd':\n          setKeys(prev => ({\n            ...prev,\n            right: true\n          }));\n          break;\n        case ' ':\n          // Space\n          setKeys(prev => ({\n            ...prev,\n            space: true\n          }));\n          if (gameState === 'menu') {\n            // Start game\n            startNewGame();\n          } else if (gameState === 'gameOver') {\n            setGameState('menu');\n          } else if (gameState === 'info') {\n            // Close info and start level\n            setShowInfo(false);\n            setGameState('playing');\n            playLevelMusic(levels[currentLevel].name);\n          }\n          break;\n        default:\n          break;\n      }\n    };\n    const handleKeyUp = event => {\n      switch (event.key) {\n        case 'ArrowUp':\n        case 'w':\n          setKeys(prev => ({\n            ...prev,\n            up: false\n          }));\n          break;\n        case 'ArrowDown':\n        case 's':\n          setKeys(prev => ({\n            ...prev,\n            down: false\n          }));\n          break;\n        case 'ArrowLeft':\n        case 'a':\n          setKeys(prev => ({\n            ...prev,\n            left: false\n          }));\n          break;\n        case 'ArrowRight':\n        case 'd':\n          setKeys(prev => ({\n            ...prev,\n            right: false\n          }));\n          break;\n        case ' ':\n          // Space\n          setKeys(prev => ({\n            ...prev,\n            space: false\n          }));\n          break;\n        default:\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [gameState, currentLevel]);\n\n  // Handle mouse input for shield\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const handleMouseDown = () => {\n      setMouse(prev => ({\n        ...prev,\n        down: true\n      }));\n    };\n    const handleMouseUp = () => {\n      setMouse(prev => ({\n        ...prev,\n        down: false\n      }));\n    };\n    const handleMouseMove = event => {\n      const rect = canvas.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      setMouse(prev => ({\n        ...prev,\n        x,\n        y\n      }));\n    };\n    canvas.addEventListener('mousedown', handleMouseDown);\n    canvas.addEventListener('mouseup', handleMouseUp);\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('mouseleave', handleMouseUp);\n\n    // Touch events for mobile\n    const handleTouchStart = event => {\n      event.preventDefault();\n      setMouse(prev => ({\n        ...prev,\n        down: true\n      }));\n    };\n    const handleTouchEnd = event => {\n      event.preventDefault();\n      setMouse(prev => ({\n        ...prev,\n        down: false\n      }));\n    };\n    const handleTouchMove = event => {\n      event.preventDefault();\n      const rect = canvas.getBoundingClientRect();\n      const touch = event.touches[0];\n      const x = touch.clientX - rect.left;\n      const y = touch.clientY - rect.top;\n      setMouse(prev => ({\n        ...prev,\n        x,\n        y\n      }));\n    };\n    canvas.addEventListener('touchstart', handleTouchStart);\n    canvas.addEventListener('touchend', handleTouchEnd);\n    canvas.addEventListener('touchmove', handleTouchMove);\n    return () => {\n      canvas.removeEventListener('mousedown', handleMouseDown);\n      canvas.removeEventListener('mouseup', handleMouseUp);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('mouseleave', handleMouseUp);\n      canvas.removeEventListener('touchstart', handleTouchStart);\n      canvas.removeEventListener('touchend', handleTouchEnd);\n      canvas.removeEventListener('touchmove', handleTouchMove);\n    };\n  }, []);\n\n  // Modified resetGame to handle level changes and persistent health/energy\n  // FIX: Fixed the issue with transition screen showing one level but loading another\n  const resetGame = (isFirstLevel = false) => {\n    // If it's the first level, randomly select a level to start with\n    if (isFirstLevel) {\n      const randomLevelIndex = Math.floor(Math.random() * levels.length);\n      setCurrentLevel(randomLevelIndex);\n    } else {\n      // Move to the next level from the current level's index\n      // Use the level's index property to determine the next level\n      const currentLevelIndex = levels[currentLevel].index;\n      const nextLevelIndex = (currentLevelIndex + 1) % levels.length;\n\n      // Find the level with the matching index\n      const nextLevel = levels.findIndex(level => level.index === nextLevelIndex);\n      setCurrentLevel(nextLevel);\n    }\n\n    // Get the level data\n    const levelData = levels[currentLevel];\n\n    // Reset player position to start door\n    setPlayer({\n      x: levelData.doors.start.x + levelData.doors.start.width / 2,\n      y: levelData.doors.start.y - 20,\n      vx: 0,\n      vy: 0,\n      radius: 15,\n      color: '#36f9f6',\n      grounded: false,\n      jumping: false\n    });\n\n    // Reset camera position\n    setCamera({\n      x: Math.max(0, levelData.doors.start.x - canvasSize.width / 2),\n      y: Math.max(0, levelData.doors.start.y - canvasSize.height / 2)\n    });\n\n    // Reset projectiles\n    setProjectiles([]);\n\n    // If it's the first level, reset health and energy\n    if (isFirstLevel) {\n      setHealth(100);\n      setEnergy(100);\n    }\n\n    // Set level data\n    setPlatforms(levelData.platforms);\n    setDoors(levelData.doors);\n    setDrones(levelData.drones);\n    setPowerUps(levelData.powerUps);\n\n    // Show battle info and description before starting\n    setInfoText(battleDescriptions[levelData.name]);\n    setShowInfo(true);\n    setGameState('info');\n  };\n\n  // Start a new game\n  const startNewGame = () => {\n    resetGame(true); // Pass true to indicate it's the first level\n  };\n\n  // Collision detection utility\n  const checkCollision = (circle, rect) => {\n    // Find the closest point to the circle within the rectangle\n    const closestX = Math.max(rect.x, Math.min(circle.x, rect.x + rect.width));\n    const closestY = Math.max(rect.y, Math.min(circle.y, rect.y + rect.height));\n\n    // Calculate the distance between the circle's center and the closest point\n    const distanceX = circle.x - closestX;\n    const distanceY = circle.y - closestY;\n\n    // If the distance is less than the circle's radius, an intersection occurs\n    const distanceSquared = distanceX * distanceX + distanceY * distanceY;\n    return distanceSquared < circle.radius * circle.radius;\n  };\n\n  // Circle-Circle collision\n  const checkCircleCollision = (circle1, circle2) => {\n    const dx = circle1.x - circle2.x;\n    const dy = circle1.y - circle2.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return distance < circle1.radius + circle2.radius;\n  };\n\n  // Automatically go to next level when winning\n  useEffect(() => {\n    if (gameState === 'win') {\n      // Stop current level music\n      stopMusic();\n\n      // Short delay before loading the next level\n      const nextLevelTimer = setTimeout(() => {\n        setGameState('playing');\n        resetGame(false); // Pass false to indicate it's not the first level\n      }, 2000);\n      return () => clearTimeout(nextLevelTimer);\n    }\n  }, [gameState]);\n\n  // Game loop\n  useEffect(() => {\n    if (gameState !== 'playing') return;\n    let animationFrameId;\n    let lastTime = 0;\n    const gameLoop = time => {\n      if (gameState !== 'playing') return;\n\n      // Delta time in seconds\n      const deltaTime = Math.min((time - lastTime) / 1000, 0.1); // Cap at 0.1 to prevent huge jumps\n      lastTime = time;\n\n      // Update energy for shield\n      if (mouse.down && energy > 0) {\n        // Activate shield and drain energy at an extremely slow rate\n        setPlayerStats(prev => ({\n          ...prev,\n          shield: true\n        }));\n        setEnergy(prev => Math.max(0, prev - deltaTime * 4)); // Very slow drain\n      } else {\n        // Deactivate shield and regenerate energy\n        setPlayerStats(prev => ({\n          ...prev,\n          shield: false\n        }));\n        setEnergy(prev => Math.min(100, prev + deltaTime * 6));\n      }\n\n      // When energy is 0, drain health very slowly\n      if (energy <= 0) {\n        setHealth(prev => {\n          const newHealth = prev - deltaTime * 2; // Very slow drain\n          if (newHealth <= 0) {\n            setGameState('gameOver');\n            stopMusic(); // Stop music on game over\n            return 0;\n          }\n          return newHealth;\n        });\n      }\n\n      // Update moving platforms\n      setPlatforms(prevPlatforms => {\n        return prevPlatforms.map(platform => {\n          if (platform.movingPlatform) {\n            const newPlatform = {\n              ...platform\n            };\n            if (platform.vertical) {\n              // Move platform vertically\n              newPlatform.y += platform.direction * platform.speed;\n\n              // Change direction if reaching limits\n              if (newPlatform.y <= platform.minY) {\n                newPlatform.direction = 1;\n              } else if (newPlatform.y >= platform.maxY) {\n                newPlatform.direction = -1;\n              }\n            } else {\n              // Move platform horizontally\n              newPlatform.x += platform.direction * platform.speed;\n\n              // Change direction if reaching limits\n              if (newPlatform.x <= platform.minX) {\n                newPlatform.direction = 1;\n              } else if (newPlatform.x >= platform.maxX) {\n                newPlatform.direction = -1;\n              }\n            }\n            return newPlatform;\n          }\n          return platform;\n        });\n      });\n\n      // Update player\n      setPlayer(prevPlayer => {\n        // Player update code (no changes needed)\n        let newPlayer = {\n          ...prevPlayer\n        };\n\n        // Apply gravity\n        newPlayer.vy += gravity;\n\n        // Apply horizontal movement\n        if (keys.left) {\n          newPlayer.vx = -playerStats.speed;\n        } else if (keys.right) {\n          newPlayer.vx = playerStats.speed;\n        } else {\n          newPlayer.vx *= friction;\n        }\n\n        // Apply jump\n        if (keys.up && newPlayer.grounded && !newPlayer.jumping) {\n          newPlayer.vy = jumpForce;\n          newPlayer.grounded = false;\n          newPlayer.jumping = true;\n        }\n\n        // Update position\n        newPlayer.x += newPlayer.vx;\n        newPlayer.y += newPlayer.vy;\n\n        // Platform collisions and other player update code\n        // (No changes needed)\n\n        return newPlayer;\n      });\n\n      // Update drones - THIS IS THE MISSING SECTION THAT NEEDS TO BE ADDED BACK\n      setDrones(prevDrones => {\n        return prevDrones.map(drone => {\n          const newDrone = {\n            ...drone\n          };\n          newDrone.timer += 1;\n          newDrone.shootTimer = (newDrone.shootTimer || 0) + 1;\n\n          // All drones shoot at player\n          if (newDrone.shootTimer > newDrone.shootSpeed) {\n            newDrone.shootTimer = 0;\n\n            // Calculate direction to player\n            const dx = player.x - newDrone.x;\n            const dy = player.y - newDrone.y;\n            const dist = Math.sqrt(dx * dx + dy * dy);\n\n            // Only shoot if player is within range\n            if (dist < 500) {\n              // Add projectile with slight randomization for difficulty tuning\n              const accuracy = newDrone.type === 'boss' ? 0.05 : 0.15; // Boss is more accurate\n              const spreadX = (Math.random() - 0.5) * 2 * accuracy;\n              const spreadY = (Math.random() - 0.5) * 2 * accuracy;\n\n              // Slower projectiles for better gameplay\n              const projectileSpeed = newDrone.type === 'boss' ? 4 : 3;\n              setProjectiles(prev => [...prev, {\n                x: newDrone.x,\n                y: newDrone.y,\n                vx: (dx / dist + spreadX) * projectileSpeed,\n                vy: (dy / dist + spreadY) * projectileSpeed,\n                radius: newDrone.type === 'boss' ? 8 : 5,\n                color: newDrone.color,\n                timer: 0,\n                source: 'drone'\n              }]);\n            }\n          }\n\n          // Different behavior based on drone type\n          switch (newDrone.type) {\n            case 'patroller':\n              // Patrol back and forth\n              if (newDrone.timer > 100) {\n                newDrone.vx *= -1;\n                newDrone.timer = 0;\n              }\n              break;\n            case 'vertical':\n              // Move up and down\n              if (newDrone.timer > 80) {\n                newDrone.vy *= -1;\n                newDrone.timer = 0;\n              }\n              break;\n            case 'chaser':\n              // Chase player\n              const dx = player.x - newDrone.x;\n              const dy = player.y - newDrone.y;\n              const dist = Math.sqrt(dx * dx + dy * dy);\n              if (dist < 300) {\n                newDrone.vx = dx / dist * 2;\n                newDrone.vy = dy / dist * 2;\n              } else {\n                // Random movement when player is far\n                if (newDrone.timer > 50) {\n                  newDrone.vx = (Math.random() - 0.5) * 2;\n                  newDrone.vy = (Math.random() - 0.5) * 2;\n                  newDrone.timer = 0;\n                }\n              }\n              break;\n            case 'turret':\n              // Doesn't move, just shoots\n              newDrone.vx = 0;\n              newDrone.vy = 0;\n              break;\n            case 'bouncer':\n              // Bounces around randomly and fast\n              if (newDrone.timer > 30) {\n                newDrone.vx = (Math.random() - 0.5) * 4;\n                newDrone.vy = (Math.random() - 0.5) * 4;\n                newDrone.timer = 0;\n              }\n              break;\n            case 'boss':\n              // Complex movement pattern\n              if (newDrone.timer % 120 < 60) {\n                // Circle motion\n                const angle = newDrone.timer * 0.05;\n                newDrone.vx = Math.cos(angle) * 2;\n                newDrone.vy = Math.sin(angle) * 2;\n              } else if (newDrone.timer % 120 < 90) {\n                // Charge at player\n                const dx = player.x - newDrone.x;\n                const dy = player.y - newDrone.y;\n                const dist = Math.sqrt(dx * dx + dy * dy);\n                if (dist > 10) {\n                  newDrone.vx = dx / dist * 3;\n                  newDrone.vy = dy / dist * 3;\n                }\n              } else {\n                // Retreat\n                const dx = player.x - newDrone.x;\n                const dy = player.y - newDrone.y;\n                const dist = Math.sqrt(dx * dx + dy * dy);\n                if (dist > 10) {\n                  newDrone.vx = -dx / dist * 2;\n                  newDrone.vy = -dy / dist * 2;\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Apply movement\n          newDrone.x += newDrone.vx;\n          newDrone.y += newDrone.vy;\n\n          // Keep drones within world bounds\n          if (newDrone.x - newDrone.radius < 0) {\n            newDrone.x = newDrone.radius;\n            newDrone.vx *= -1;\n          } else if (newDrone.x + newDrone.radius > worldSize.width) {\n            newDrone.x = worldSize.width - newDrone.radius;\n            newDrone.vx *= -1;\n          }\n          if (newDrone.y - newDrone.radius < 0) {\n            newDrone.y = newDrone.radius;\n            newDrone.vy *= -1;\n          } else if (newDrone.y + newDrone.radius > worldSize.height) {\n            newDrone.y = worldSize.height - newDrone.radius;\n            newDrone.vy *= -1;\n          }\n\n          // Check collision with player\n          if (checkCircleCollision(newDrone, player)) {\n            // If player has shield, NO damage at all\n            if (!playerStats.shield) {\n              setHealth(prev => {\n                // Drastically reduce damage rate\n                const newHealth = prev - 1; // Very low damage\n                if (newHealth <= 0) {\n                  setGameState('gameOver');\n                  stopMusic(); // Stop music on game over\n                  return 0;\n                }\n                return newHealth;\n              });\n\n              // Apply knockback to player (reduced)\n              setPlayer(prevPlayer => {\n                const knockbackX = prevPlayer.x - newDrone.x;\n                const knockbackY = prevPlayer.y - newDrone.y;\n                const knockbackDist = Math.sqrt(knockbackX * knockbackX + knockbackY * knockbackY);\n                if (knockbackDist > 0) {\n                  return {\n                    ...prevPlayer,\n                    vx: knockbackX / knockbackDist * 5,\n                    // Reduced knockback\n                    vy: knockbackY / knockbackDist * 5\n                  };\n                }\n                return prevPlayer;\n              });\n            }\n            // If shield is active, no damage and no knockback occurs\n          }\n\n          // Collision with platforms\n          for (const platform of platforms) {\n            if (checkCollision(newDrone, platform)) {\n              // Simple bounce behavior\n              if (Math.abs(newDrone.vx) > Math.abs(newDrone.vy)) {\n                newDrone.vx *= -1;\n              } else {\n                newDrone.vy *= -1;\n              }\n            }\n          }\n          return newDrone;\n        });\n      });\n\n      // Update projectiles\n      setProjectiles(prevProjectiles => {\n        const updatedProjectiles = prevProjectiles.map(projectile => {\n          const newProjectile = {\n            ...projectile\n          };\n\n          // Move projectile\n          newProjectile.x += newProjectile.vx;\n          newProjectile.y += newProjectile.vy;\n\n          // Increase timer\n          newProjectile.timer += 1;\n          return newProjectile;\n        });\n\n        // Remove projectiles that are out of bounds or too old\n        const filteredProjectiles = updatedProjectiles.filter(projectile => {\n          // Remove if out of bounds\n          if (projectile.x < -projectile.radius || projectile.x > worldSize.width + projectile.radius || projectile.y < -projectile.radius || projectile.y > worldSize.height + projectile.radius || projectile.timer > 120) {\n            return false;\n          }\n\n          // Check collision with player for drone projectiles\n          if (projectile.source === 'drone' && checkCircleCollision(projectile, player)) {\n            // If player has shield, block projectile\n            if (playerStats.shield) {\n              return false; // Remove projectile without damage\n            } else {\n              // Much less damage from projectiles\n              setHealth(prev => {\n                const newHealth = prev - 2; // Reduced from 7 to 2\n                if (newHealth <= 0) {\n                  setGameState('gameOver');\n                  stopMusic(); // Stop music on game over\n                  return 0;\n                }\n                return newHealth;\n              });\n              return false;\n            }\n          }\n\n          // Check collision with platforms\n          for (const platform of platforms) {\n            if (checkCollision(projectile, platform)) {\n              return false;\n            }\n          }\n          return true;\n        });\n        return filteredProjectiles;\n      });\n      animationFrameId = requestAnimationFrame(gameLoop);\n    };\n    animationFrameId = requestAnimationFrame(gameLoop);\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [gameState, keys, player, platforms, doors, powerUps, mouse, energy, playerStats, worldSize.width, worldSize.height, canvasSize.width, canvasSize.height, gravity, friction, jumpForce, currentLevel]);\n  // Render game\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n\n    // Clear canvas with dark background for N-GON style\n    ctx.fillStyle = '#111';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Draw based on game state\n    if (gameState === 'menu') {\n      // Draw title\n      ctx.fillStyle = '#36f9f6'; // Bright cyan\n      ctx.font = 'bold 48px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('VIET-GON', canvas.width / 2, canvas.height / 3);\n\n      // Draw subtitle\n      ctx.fillStyle = '#f55';\n      ctx.font = 'bold 24px Arial';\n      ctx.fillText('Vietnam War Battles', canvas.width / 2, canvas.height / 3 + 40);\n\n      // Draw instructions\n      ctx.fillStyle = '#fff'; // White text for dark background\n      ctx.font = '24px Arial';\n      ctx.fillText('Press SPACE to Start', canvas.width / 2, canvas.height / 2);\n      ctx.font = '18px Arial';\n      ctx.fillText('Use ARROW KEYS or WASD to move and jump', canvas.width / 2, canvas.height / 2 + 40);\n      ctx.fillText('HOLD MOUSE BUTTON for shield (drains energy)', canvas.width / 2, canvas.height / 2 + 70);\n      ctx.fillText('When energy is 0, health will drain!', canvas.width / 2, canvas.height / 2 + 100);\n      ctx.fillText('Don\\'t fall off platforms - it\\'s instant death!', canvas.width / 2, canvas.height / 2 + 130);\n      ctx.fillText('Reach the red door to win and progress to next level', canvas.width / 2, canvas.height / 2 + 160);\n    } else if (gameState === 'info') {\n      // Draw battle info screen\n      if (infoText) {\n        // Semi-transparent background\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        // Title\n        ctx.fillStyle = '#36f9f6'; // Bright cyan\n        ctx.font = 'bold 36px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText(infoText.title, canvas.width / 2, 100);\n\n        // Year\n        ctx.fillStyle = '#f55';\n        ctx.font = 'bold 24px Arial';\n        ctx.fillText(infoText.year, canvas.width / 2, 140);\n\n        // Description - wrap text\n        ctx.fillStyle = '#fff';\n        ctx.font = '18px Arial';\n        const maxWidth = canvas.width - 100;\n        const lineHeight = 30;\n        const words = infoText.description.split(' ');\n        let line = '';\n        let y = 200;\n        for (let i = 0; i < words.length; i++) {\n          const testLine = line + words[i] + ' ';\n          const metrics = ctx.measureText(testLine);\n          const testWidth = metrics.width;\n          if (testWidth > maxWidth) {\n            ctx.fillText(line, canvas.width / 2, y);\n            line = words[i] + ' ';\n            y += lineHeight;\n          } else {\n            line = testLine;\n          }\n        }\n        ctx.fillText(line, canvas.width / 2, y);\n\n        // Gameplay tips\n        ctx.fillStyle = '#ffff55'; // Yellow\n        ctx.font = 'italic 18px Arial';\n        y += lineHeight * 2;\n        const gameplayWords = infoText.gameplay.split(' ');\n        line = '';\n        for (let i = 0; i < gameplayWords.length; i++) {\n          const testLine = line + gameplayWords[i] + ' ';\n          const metrics = ctx.measureText(testLine);\n          const testWidth = metrics.width;\n          if (testWidth > maxWidth) {\n            ctx.fillText(line, canvas.width / 2, y);\n            line = gameplayWords[i] + ' ';\n            y += lineHeight;\n          } else {\n            line = testLine;\n          }\n        }\n        ctx.fillText(line, canvas.width / 2, y);\n\n        // Draw instruction\n        ctx.fillStyle = '#fff';\n        ctx.font = '24px Arial';\n        ctx.fillText('Press SPACE to Begin Battle', canvas.width / 2, canvas.height - 100);\n\n        // Load and display battle image\n        const img = new Image();\n        img.src = battleImages[infoText.title.split(' ').pop()];\n        img.onload = () => {\n          // Draw image with dim opacity\n          ctx.globalAlpha = 0.3;\n          ctx.drawImage(img, canvas.width / 2 - 200, canvas.height / 2 - 100, 400, 300);\n          ctx.globalAlpha = 1.0;\n        };\n      }\n    } else if (gameState === 'playing' || gameState === 'gameOver' || gameState === 'win') {\n      // Apply camera transformation\n      ctx.save();\n      ctx.translate(-camera.x, -camera.y);\n\n      // Draw platforms\n      platforms.forEach(platform => {\n        ctx.fillStyle = platform.color;\n        ctx.fillRect(platform.x, platform.y, platform.width, platform.height);\n      });\n\n      // Draw doors\n      ctx.fillStyle = doors.start.color;\n      ctx.fillRect(doors.start.x, doors.start.y, doors.start.width, doors.start.height);\n      ctx.fillStyle = doors.end.color;\n      ctx.fillRect(doors.end.x, doors.end.y, doors.end.width, doors.end.height);\n\n      // Draw power-ups\n      powerUps.forEach(powerUp => {\n        if (powerUp.active) {\n          ctx.fillStyle = powerUp.color;\n          ctx.beginPath();\n          ctx.arc(powerUp.x, powerUp.y, powerUp.radius, 0, Math.PI * 2);\n          ctx.fill();\n\n          // Add glow effect\n          ctx.shadowColor = powerUp.color;\n          ctx.shadowBlur = 10;\n          ctx.strokeStyle = '#fff';\n          ctx.lineWidth = 2;\n          ctx.stroke();\n          ctx.shadowBlur = 0;\n\n          // Add icon based on type\n          ctx.fillStyle = '#fff';\n          ctx.textAlign = 'center';\n          ctx.textBaseline = 'middle';\n          ctx.font = '10px Arial';\n          switch (powerUp.type) {\n            case 'health':\n              ctx.fillText('+', powerUp.x, powerUp.y);\n              break;\n            case 'energy':\n              ctx.fillText('E', powerUp.x, powerUp.y);\n              break;\n            default:\n              break;\n          }\n        }\n      });\n\n      // Draw projectiles\n      projectiles.forEach(projectile => {\n        ctx.fillStyle = projectile.color;\n        ctx.beginPath();\n        ctx.arc(projectile.x, projectile.y, projectile.radius, 0, Math.PI * 2);\n        ctx.fill();\n\n        // Add trail effect\n        ctx.globalAlpha = 0.5;\n        ctx.beginPath();\n        ctx.arc(projectile.x - projectile.vx, projectile.y - projectile.vy, projectile.radius * 0.8, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.globalAlpha = 0.3;\n        ctx.beginPath();\n        ctx.arc(projectile.x - projectile.vx * 2, projectile.y - projectile.vy * 2, projectile.radius * 0.6, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.globalAlpha = 1.0;\n      });\n\n      // Draw drones\n      drones.forEach(drone => {\n        // Draw drone body\n        ctx.fillStyle = drone.color;\n        ctx.beginPath();\n        ctx.arc(drone.x, drone.y, drone.radius, 0, Math.PI * 2);\n        ctx.fill();\n\n        // Add detail based on drone type\n        ctx.strokeStyle = '#000';\n        ctx.lineWidth = 1;\n        if (drone.type === 'shooter' || drone.type === 'turret') {\n          // Draw shooter detail\n          ctx.beginPath();\n          ctx.arc(drone.x, drone.y, drone.radius * 0.7, 0, Math.PI * 2);\n          ctx.stroke();\n\n          // Draw gun\n          const angle = Math.atan2(player.y - drone.y, player.x - drone.x);\n          ctx.beginPath();\n          ctx.moveTo(drone.x, drone.y);\n          ctx.lineTo(drone.x + Math.cos(angle) * drone.radius * 1.2, drone.y + Math.sin(angle) * drone.radius * 1.2);\n          ctx.lineWidth = 3;\n          ctx.stroke();\n          ctx.lineWidth = 1;\n        } else if (drone.type === 'chaser') {\n          // Draw chaser detail\n          const angle = Math.atan2(player.y - drone.y, player.x - drone.x);\n\n          // Draw triangular shape pointing at player\n          ctx.beginPath();\n          ctx.moveTo(drone.x + Math.cos(angle) * drone.radius, drone.y + Math.sin(angle) * drone.radius);\n          ctx.lineTo(drone.x + Math.cos(angle + 2.1) * drone.radius * 0.7, drone.y + Math.sin(angle + 2.1) * drone.radius * 0.7);\n          ctx.lineTo(drone.x + Math.cos(angle - 2.1) * drone.radius * 0.7, drone.y + Math.sin(angle - 2.1) * drone.radius * 0.7);\n          ctx.closePath();\n          ctx.fillStyle = '#000';\n          ctx.fill();\n        } else if (drone.type === 'patroller' || drone.type === 'vertical') {\n          // Draw patroller detail - hexagon shape\n          ctx.beginPath();\n          for (let i = 0; i < 6; i++) {\n            const angle = i * Math.PI * 2 / 6;\n            const x = drone.x + Math.cos(angle) * (drone.radius * 0.7);\n            const y = drone.y + Math.sin(angle) * (drone.radius * 0.7);\n            if (i === 0) {\n              ctx.moveTo(x, y);\n            } else {\n              ctx.lineTo(x, y);\n            }\n          }\n          ctx.closePath();\n          ctx.stroke();\n        } else if (drone.type === 'bouncer') {\n          // Draw bouncer detail - pulsing circle\n          const pulseSize = 0.5 + 0.2 * Math.sin(Date.now() / 200);\n          ctx.beginPath();\n          ctx.arc(drone.x, drone.y, drone.radius * pulseSize, 0, Math.PI * 2);\n          ctx.stroke();\n        } else if (drone.type === 'boss') {\n          // Draw boss detail\n          ctx.beginPath();\n          ctx.arc(drone.x, drone.y, drone.radius * 0.8, 0, Math.PI * 2);\n          ctx.stroke();\n\n          // Draw spikes\n          for (let i = 0; i < 8; i++) {\n            const angle = i * Math.PI * 2 / 8;\n            ctx.beginPath();\n            ctx.moveTo(drone.x, drone.y);\n            ctx.lineTo(drone.x + Math.cos(angle) * drone.radius * 1.3, drone.y + Math.sin(angle) * drone.radius * 1.3);\n            ctx.stroke();\n          }\n\n          // Draw health bar\n          if (drone.health) {\n            const healthWidth = drone.radius * 2;\n            const healthHeight = 5;\n            const healthX = drone.x - healthWidth / 2;\n            const healthY = drone.y - drone.radius - 10;\n            ctx.fillStyle = '#555';\n            ctx.fillRect(healthX, healthY, healthWidth, healthHeight);\n            ctx.fillStyle = '#f55';\n            ctx.fillRect(healthX, healthY, healthWidth * (drone.health / 100), healthHeight);\n          }\n        }\n\n        // All drones show targeting line when about to shoot\n        if (drone.shootTimer > (drone.shootSpeed || 60) * 0.8) {\n          const angle = Math.atan2(player.y - drone.y, player.x - drone.x);\n          ctx.strokeStyle = drone.color;\n          ctx.globalAlpha = 0.5;\n          ctx.beginPath();\n          ctx.moveTo(drone.x, drone.y);\n          ctx.lineTo(drone.x + Math.cos(angle) * 100, drone.y + Math.sin(angle) * 100);\n          ctx.stroke();\n          ctx.globalAlpha = 1.0;\n        }\n      });\n\n      // Draw player\n      ctx.fillStyle = player.color;\n      ctx.beginPath();\n      ctx.arc(player.x, player.y, player.radius, 0, Math.PI * 2);\n      ctx.fill();\n\n      // Add detail to player\n      ctx.strokeStyle = '#000';\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n      ctx.arc(player.x, player.y, player.radius * 0.7, 0, Math.PI * 2);\n      ctx.stroke();\n\n      // Draw shield if active\n      if (playerStats.shield) {\n        ctx.strokeStyle = '#f1c40f';\n        ctx.lineWidth = 3;\n        ctx.globalAlpha = 0.7;\n        ctx.beginPath();\n        ctx.arc(player.x, player.y, player.radius * 1.3, 0, Math.PI * 2);\n        ctx.stroke();\n\n        // Add pulsing effect to shield\n        ctx.globalAlpha = 0.3;\n        ctx.fillStyle = '#f1c40f';\n        ctx.beginPath();\n        ctx.arc(player.x, player.y, player.radius * 1.3, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.globalAlpha = 1.0;\n      }\n\n      // Reset camera transformation\n      ctx.restore();\n\n      // UI elements - drawn without camera transformation\n      // Draw level info\n      ctx.fillStyle = '#fff';\n      ctx.font = '18px Arial';\n      ctx.textAlign = 'center';\n\n      // Draw health bar\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\n      ctx.fillRect(20, 20, 200, 20);\n      ctx.fillStyle = health > 50 ? '#2ecc71' : health > 25 ? '#f1c40f' : '#e74c3c';\n      ctx.fillRect(20, 20, health * 2, 20);\n      ctx.strokeStyle = '#fff';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(20, 20, 200, 20);\n\n      // Health text\n      ctx.fillStyle = energy > 0 ? '#fff' : '#f55'; // Red text when energy is 0 to warn player\n      ctx.font = '16px Arial';\n      ctx.textAlign = 'left';\n      ctx.fillText(`Health: ${Math.floor(health)}%`, 25, 36);\n\n      // Energy bar\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\n      ctx.fillRect(20, 50, 200, 20);\n      ctx.fillStyle = energy > 20 ? '#3498db' : '#e74c3c'; // Red when energy is low\n      ctx.fillRect(20, 50, energy * 2, 20);\n      ctx.strokeStyle = '#fff';\n      ctx.lineWidth = 2;\n      ctx.strokeRect(20, 50, 200, 20);\n\n      // Energy text\n      ctx.fillStyle = energy > 20 ? '#fff' : '#ffff00'; // Yellow warning text when low\n      ctx.font = '16px Arial';\n      ctx.textAlign = 'left';\n      ctx.fillText(`Energy: ${Math.floor(energy)}%`, 25, 66);\n\n      // Show warning when energy is depleted\n      if (energy <= 0) {\n        ctx.fillStyle = '#e74c3c';\n        ctx.font = 'bold 14px Arial';\n        ctx.fillText('WARNING: Health draining!', 25, 90);\n      }\n\n      // Mini-map (top-right corner)\n      const mapWidth = 150;\n      const mapHeight = 100;\n      const mapX = canvas.width - mapWidth - 20;\n      const mapY = 20;\n\n      // Draw mini-map background\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.3)';\n      ctx.fillRect(mapX, mapY, mapWidth, mapHeight);\n      ctx.strokeStyle = '#000';\n      ctx.strokeRect(mapX, mapY, mapWidth, mapHeight);\n\n      // Scale factors for the mini-map\n      const scaleX = mapWidth / worldSize.width;\n      const scaleY = mapHeight / worldSize.height;\n\n      // Draw player on mini-map\n      ctx.fillStyle = player.color;\n      ctx.beginPath();\n      ctx.arc(mapX + player.x * scaleX, mapY + player.y * scaleY, 3, 0, Math.PI * 2);\n      ctx.fill();\n\n      // Draw start and end doors on mini-map\n      ctx.fillStyle = doors.start.color;\n      ctx.fillRect(mapX + doors.start.x * scaleX, mapY + doors.start.y * scaleY, doors.start.width * scaleX, doors.start.height * scaleY);\n      ctx.fillStyle = doors.end.color;\n      ctx.fillRect(mapX + doors.end.x * scaleX, mapY + doors.end.y * scaleY, doors.end.width * scaleX, doors.end.height * scaleY);\n\n      // Draw viewport rectangle on mini-map\n      ctx.strokeStyle = '#fff';\n      ctx.strokeRect(mapX + camera.x * scaleX, mapY + camera.y * scaleY, canvasSize.width * scaleX, canvasSize.height * scaleY);\n\n      // Game over overlay\n      if (gameState === 'gameOver') {\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = '#e74c3c';\n        ctx.font = 'bold 36px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText('GAME OVER', canvas.width / 2, canvas.height / 3);\n        ctx.fillStyle = '#fff';\n        ctx.font = '24px Arial';\n        ctx.fillText('Press SPACE to Restart', canvas.width / 2, canvas.height / 2);\n      } else if (gameState === 'win') {\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        ctx.fillStyle = '#2ecc71';\n        ctx.font = 'bold 36px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText('LEVEL COMPLETE!', canvas.width / 2, canvas.height / 3);\n\n        // FIX: Display the correct next level name based on the index\n        const currentLevelIndex = levels[currentLevel].index;\n        const nextLevelIndex = (currentLevelIndex + 1) % levels.length;\n        const nextLevel = levels.find(level => level.index === nextLevelIndex);\n        ctx.fillStyle = '#fff';\n        ctx.font = '24px Arial';\n        ctx.fillText(`Proceeding to ${nextLevel.name}...`, canvas.width / 2, canvas.height / 2);\n      }\n    }\n  }, [gameState, platforms, doors, player, drones, projectiles, powerUps, health, energy, playerStats, camera, worldSize.width, worldSize.height, canvasSize.width, canvasSize.height, currentLevel, levels, infoText, showInfo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: '#eee',\n      backgroundColor: '#222',\n      padding: '20px',\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#36f9f6',\n          margin: '0 0 20px 0',\n          fontFamily: 'monospace',\n          textShadow: '2px 2px #000'\n        },\n        children: \"VIET-GON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1738,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: '#f55',\n          margin: '-15px 0 20px 0',\n          fontFamily: 'monospace',\n          fontSize: '18px'\n        },\n        children: \"Vietnam War Battles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1739,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1737,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: canvasSize.width,\n        height: canvasSize.height,\n        style: {\n          backgroundColor: '#111',\n          borderRadius: '5px',\n          boxShadow: '0 0 20px rgba(54, 249, 246, 0.5)' // Enhanced cyan glow\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1743,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '15px',\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            padding: '8px 15px',\n            border: 'none',\n            borderRadius: '4px',\n            backgroundColor: '#36f9f6',\n            color: '#111',\n            fontWeight: 'bold',\n            cursor: 'pointer',\n            fontFamily: 'monospace'\n          },\n          onClick: startNewGame,\n          children: \"START GAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1755,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            padding: '8px 15px',\n            border: 'none',\n            borderRadius: '4px',\n            backgroundColor: '#f55',\n            color: '#fff',\n            fontWeight: 'bold',\n            cursor: 'pointer',\n            fontFamily: 'monospace'\n          },\n          onClick: () => {\n            if (gameState === 'playing') {\n              stopMusic();\n              setGameState('menu');\n            }\n          },\n          children: \"MENU\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1771,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1754,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1742,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      style: {\n        fontSize: '0.9rem',\n        color: '#aaa',\n        marginTop: '20px',\n        fontFamily: 'monospace'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Use arrow keys or WASD to move and jump. Hold mouse button for shield (drains energy).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1795,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"When energy is depleted, health will drain! Don't fall off platforms!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1796,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Collect power-ups and reach the red door to win.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1797,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#f55'\n        },\n        children: \"Experience legendary battles of the Vietnam War in this n-gon style platformer.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1798,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1794,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1728,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"8zs94HWjatDRNZFIUtG3ghu6Xm8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","battleDescriptions","title","year","description","gameplay","battleMusic","battleImages","App","_s","canvasRef","gameState","setGameState","audioRef","currentLevel","setCurrentLevel","showInfo","setShowInfo","infoText","setInfoText","camera","setCamera","x","y","worldSize","width","height","canvasSize","setCanvasSize","player","setPlayer","vx","vy","radius","color","grounded","jumping","mouse","setMouse","down","energy","setEnergy","platforms","setPlatforms","doors","setDoors","start","end","drones","setDrones","projectiles","setProjectiles","powerUps","setPowerUps","health","setHealth","playerStats","setPlayerStats","speed","shield","keys","setKeys","up","left","right","space","gravity","friction","jumpForce","levels","name","index","movingPlatform","direction","minX","maxX","id","type","timer","shootTimer","shootSpeed","active","minY","maxY","vertical","playLevelMusic","levelName","current","Audio","stopMusic","musicTrack","src","loop","volume","play","catch","e","console","log","pause","currentTime","handleResize","maxWidth","Math","min","window","innerWidth","maxHeight","innerHeight","aspectRatio","addEventListener","removeEventListener","handleKeyDown","event","key","prev","startNewGame","handleKeyUp","canvas","handleMouseDown","handleMouseUp","handleMouseMove","rect","getBoundingClientRect","clientX","clientY","top","handleTouchStart","preventDefault","handleTouchEnd","handleTouchMove","touch","touches","resetGame","isFirstLevel","randomLevelIndex","floor","random","length","currentLevelIndex","nextLevelIndex","nextLevel","findIndex","level","levelData","max","checkCollision","circle","closestX","closestY","distanceX","distanceY","distanceSquared","checkCircleCollision","circle1","circle2","dx","dy","distance","sqrt","nextLevelTimer","setTimeout","clearTimeout","animationFrameId","lastTime","gameLoop","time","deltaTime","newHealth","prevPlatforms","map","platform","newPlatform","prevPlayer","newPlayer","prevDrones","drone","newDrone","dist","accuracy","spreadX","spreadY","projectileSpeed","source","angle","cos","sin","knockbackX","knockbackY","knockbackDist","abs","prevProjectiles","updatedProjectiles","projectile","newProjectile","filteredProjectiles","filter","requestAnimationFrame","cancelAnimationFrame","ctx","getContext","fillStyle","fillRect","font","textAlign","fillText","lineHeight","words","split","line","i","testLine","metrics","measureText","testWidth","gameplayWords","img","Image","pop","onload","globalAlpha","drawImage","save","translate","forEach","powerUp","beginPath","arc","PI","fill","shadowColor","shadowBlur","strokeStyle","lineWidth","stroke","textBaseline","atan2","moveTo","lineTo","closePath","pulseSize","Date","now","healthWidth","healthHeight","healthX","healthY","restore","strokeRect","mapWidth","mapHeight","mapX","mapY","scaleX","scaleY","find","style","backgroundColor","padding","minHeight","display","flexDirection","alignItems","children","margin","fontFamily","textShadow","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","ref","borderRadius","boxShadow","marginTop","gap","border","fontWeight","cursor","onClick","_c","$RefreshReg$"],"sources":["/Users/qdong/Desktop/Desktop1/Andy/dodgeball/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\n// Battle information and descriptions\nconst battleDescriptions = {\n  \"Ia Drang Valley\": {\n    title: \"Ia Drang Valley\",\n    year: \"1965\",\n    description: \"The Battle of Ia Drang was the first major engagement between U.S. forces and the North Vietnamese Army. The combat took place in the Central Highlands of South Vietnam as American troops were inserted by helicopter into a landing zone and soon came under attack from the North Vietnamese forces hiding in the surrounding jungle.\",\n    gameplay: \"Navigate through dense jungle terrain while avoiding enemy fire. Use the terrain for cover and conserve your energy for critical moments.\"\n  },\n  \"Khe Sanh\": {\n    title: \"Battle of Khe Sanh\",\n    year: \"1968\",\n    description: \"The Battle of Khe Sanh was a prolonged siege and one of the most publicized battles of the Vietnam War. U.S. Marines defended their base against intense attacks from North Vietnamese forces for 77 days. Located near the Laotian border, this remote outpost became a symbol of American determination and resilience during the war.\",\n    gameplay: \"Jump between scattered platforms representing the isolated hilltops of Khe Sanh. Time your movements carefully between the moving platforms while managing your shield against frequent enemy fire.\"\n  },\n  \"Hamburger Hill\": {\n    title: \"Battle of Hamburger Hill\",\n    year: \"1969\",\n    description: \"Also known as Hill 937, this battle consisted of a series of assaults by U.S. forces against a heavily fortified North Vietnamese position. The battle earned its grim nickname due to the high casualty rate, with soldiers describing the hill as a 'meat grinder.' Despite eventually capturing the hill, U.S. forces withdrew shortly after, raising questions about the battle's strategic value.\",\n    gameplay: \"Traverse the treacherous cave-like structures while avoiding stalactites and stalagmites. Watch for ambushes from enemy drones hiding in the shadows.\"\n  },\n  \"Hue City\": {\n    title: \"Battle of Hue\",\n    year: \"1968\",\n    description: \"During the Tet Offensive, North Vietnamese and Viet Cong forces captured the ancient imperial city of Hue. U.S. Marines and South Vietnamese troops fought block by block to reclaim the city in intense urban combat, resulting in some of the most fierce fighting of the war and significant civilian casualties.\",\n    gameplay: \"Navigate through the urban fortress structures, using the moving platforms to cross between buildings. Watch for snipers positioned in the upper levels.\"\n  },\n  \"Tet Offensive\": {\n    title: \"Tet Offensive\",\n    year: \"1968\",\n    description: \"A coordinated series of surprise attacks launched by the North Vietnamese and Viet Cong against South Vietnamese and American forces during the Vietnamese lunar new year (Tet). Though militarily unsuccessful, the offensive shocked the American public and marked a turning point in U.S. public opinion about the war.\",\n    gameplay: \"Ascend the vertical urban landscape using elevators and bridges between buildings. This final level combines all the challenges from previous battlefields in the most difficult test of skill.\"\n  }\n};\n\n// Battle music tracks mapping\nconst battleMusic = {\n  \"Ia Drang Valley\": \"EveOfDestruction.mp3\",\n  \"Khe Sanh\": \"FortunateSon.mp3\",\n  \"Hamburger Hill\": \"GimmeShelter.mp3\",\n  \"Hue City\": \"McDonald.mp3\",\n  \"Tet Offensive\": \"TheAnimals.mp3\"\n};\n\n// Updated battle images with Unsplash URLs\nconst battleImages = {\n  \"Ia Drang Valley\": \"https://images.unsplash.com/photo-1519335337423-a3357c2cd12e?w=1200\",\n  \"Khe Sanh\": \"https://images.unsplash.com/photo-1518775053278-5a569f0be557?w=1200\",\n  \"Hamburger Hill\": \"https://images.unsplash.com/photo-1469827160215-9d29e96e72f4?w=1200\",\n  \"Hue City\": \"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=1200\", \n  \"Tet Offensive\": \"https://images.unsplash.com/photo-1534447677768-be436bb09401?w=1200\"\n};\n\nfunction App() {\n  const canvasRef = useRef(null);\n  const [gameState, setGameState] = useState('menu'); // 'menu', 'playing', 'gameOver', 'win', 'info'\n  const audioRef = useRef(null);\n  \n  // Add a level state to track current level\n  const [currentLevel, setCurrentLevel] = useState(0);\n  \n  // Add state for showing info/battle descriptions\n  const [showInfo, setShowInfo] = useState(false);\n  const [infoText, setInfoText] = useState(null);\n  \n  // Camera/viewport settings\n  const [camera, setCamera] = useState({ x: 0, y: 0 });\n  \n  // World size - much larger than viewport\n  const worldSize = { width: 3000, height: 2000 };\n  \n  // Canvas/viewport size\n  const [canvasSize, setCanvasSize] = useState({ width: 1200, height: 800 });\n  \n  // Player properties\n  const [player, setPlayer] = useState({\n    x: 100,\n    y: 700,\n    vx: 0,\n    vy: 0,\n    radius: 15,\n    color: '#36f9f6', // Bright cyan like n-gon\n    grounded: false,\n    jumping: false\n  });\n  \n  // Mouse state for shield\n  const [mouse, setMouse] = useState({\n    down: false,\n    x: 0,\n    y: 0\n  });\n  \n  // Energy for shield - depletes when holding shield\n  const [energy, setEnergy] = useState(100);\n  \n  // Platforms - now set by level configuration\n  const [platforms, setPlatforms] = useState([]);\n  \n  // Doors - now set by level configuration\n  const [doors, setDoors] = useState({\n    start: { x: 50, y: 1730, width: 40, height: 70, color: '#2ecc71' },\n    end: { x: 2420, y: 380, width: 40, height: 70, color: '#e74c3c' }\n  });\n  \n  // Drones - now set by level configuration\n  const [drones, setDrones] = useState([]);\n  \n  // Projectiles\n  const [projectiles, setProjectiles] = useState([]);\n  \n  // Power-ups - now set by level configuration\n  const [powerUps, setPowerUps] = useState([]);\n  \n  // Health\n  const [health, setHealth] = useState(100);\n  \n  // Player stats for power-ups\n  const [playerStats, setPlayerStats] = useState({\n    speed: 5,\n    shield: false\n  });\n  \n  // Key states\n  const [keys, setKeys] = useState({\n    up: false,\n    down: false,\n    left: false,\n    right: false,\n    space: false\n  });\n  \n  // Physics constants\n  const gravity = 0.5;\n  const friction = 0.8;\n  const jumpForce = -12;\n  \n  // Define level configurations - FIX: Match level index to name explicitly\n  const levels = [\n    // Level 0 - Ia Drang Valley\n    {\n      name: \"Ia Drang Valley\",\n      index: 0, // Added index to ensure consistency\n      platforms: [\n        // Starting area\n        { x: 0, y: 1800, width: 400, height: 50, color: '#444' },\n        \n        // Path 1 - going right\n        { x: 500, y: 1750, width: 150, height: 20, color: '#ff55ee' },\n        { x: 750, y: 1700, width: 120, height: 20, color: '#55ffee' },\n        { x: 950, y: 1650, width: 180, height: 20, color: '#444' },\n        \n        // Path 2 - going up\n        { x: 1200, y: 1600, width: 100, height: 20, color: '#ffff55' },\n        { x: 1100, y: 1500, width: 120, height: 20, color: '#444' },\n        { x: 1250, y: 1400, width: 150, height: 20, color: '#ff5555' },\n        \n        // Path 3 - going left\n        { x: 1050, y: 1300, width: 180, height: 20, color: '#55ff55' },\n        { x: 800, y: 1250, width: 150, height: 20, color: '#444' },\n        { x: 550, y: 1200, width: 170, height: 20, color: '#5555ff' },\n        \n        // Path 4 - going up and right\n        { x: 600, y: 1100, width: 120, height: 20, color: '#444' },\n        { x: 800, y: 1000, width: 130, height: 20, color: '#ff55ff' },\n        { x: 1000, y: 900, width: 150, height: 20, color: '#ff5555' },\n        \n        // Path 5 - going far right\n        { x: 1300, y: 850, width: 180, height: 20, color: '#444' },\n        { x: 1600, y: 800, width: 200, height: 20, color: '#55ffff' },\n        { x: 1900, y: 750, width: 150, height: 20, color: '#ffff55' },\n        \n        // Path 6 - going down\n        { x: 2200, y: 800, width: 120, height: 20, color: '#444' },\n        { x: 2150, y: 900, width: 130, height: 20, color: '#ff5555' },\n        { x: 2250, y: 1000, width: 140, height: 20, color: '#5555ff' },\n        \n        // Path 7 - going left\n        { x: 2050, y: 1050, width: 150, height: 20, color: '#444' },\n        { x: 1800, y: 1100, width: 170, height: 20, color: '#55ff55' },\n        { x: 1550, y: 1150, width: 160, height: 20, color: '#ff55ff' },\n        \n        // Path 8 - final approach\n        { x: 1600, y: 1000, width: 140, height: 20, color: '#444' },\n        { x: 1750, y: 850, width: 120, height: 20, color: '#ffff55' },\n        { x: 1900, y: 700, width: 130, height: 20, color: '#ff5555' },\n        { x: 2050, y: 550, width: 150, height: 20, color: '#444' },\n        { x: 2300, y: 450, width: 200, height: 50, color: '#55ffff' },\n        \n        // Moving platforms\n        { x: 350, y: 1650, width: 80, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 2, minX: 350, maxX: 500 },\n        { x: 900, y: 1400, width: 80, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 3, minX: 900, maxX: 1050 },\n        { x: 1400, y: 950, width: 80, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 4, minX: 1300, maxX: 1500 }\n      ],\n      doors: {\n        start: { x: 50, y: 1730, width: 40, height: 70, color: '#2ecc71' },\n        end: { x: 2420, y: 380, width: 40, height: 70, color: '#e74c3c' }\n      },\n      drones: [\n        // Starting area drone (just one)\n        { id: 1, x: 200, y: 1700, vx: 1, vy: 0, radius: 12, color: '#f55', type: 'patroller', timer: 0, shootTimer: 0, shootSpeed: 40 },\n        \n        // Path 1 drone (reduced count)\n        { id: 2, x: 650, y: 1650, vx: 0, vy: 1, radius: 14, color: '#f5f', type: 'vertical', timer: 0, shootTimer: 0, shootSpeed: 60 },\n        \n        // Path 2 drone (spread out)\n        { id: 3, x: 1150, y: 1450, vx: 0, vy: 0, radius: 18, color: '#5ff', type: 'turret', timer: 0, shootTimer: 0, shootSpeed: 30 },\n        \n        // Path 3 drone\n        { id: 4, x: 750, y: 1250, vx: 1.2, vy: 0.8, radius: 15, color: '#f95', type: 'bouncer', timer: 0, shootTimer: 0, shootSpeed: 40 },\n        \n        // Path 4 drone\n        { id: 5, x: 700, y: 1050, vx: 0, vy: 0, radius: 18, color: '#5f5', type: 'turret', timer: 0, shootTimer: 0, shootSpeed: 35 },\n        \n        // Path 5 drones (spread out)\n        { id: 6, x: 1500, y: 800, vx: 1, vy: 0, radius: 13, color: '#f55', type: 'patroller', timer: 0, shootTimer: 0, shootSpeed: 40 },\n        { id: 7, x: 1850, y: 750, vx: 0, vy: 1, radius: 16, color: '#ff5', type: 'vertical', timer: 0, shootTimer: 0, shootSpeed: 50 },\n        \n        // Path 6 & 7 drones (more spread)\n        { id: 8, x: 2150, y: 850, vx: 0, vy: 0, radius: 20, color: '#5ff', type: 'turret', timer: 0, shootTimer: 0, shootSpeed: 25 },\n        { id: 9, x: 1800, y: 1100, vx: 1.5, vy: 0, radius: 14, color: '#f95', type: 'patroller', timer: 0, shootTimer: 0, shootSpeed: 45 },\n        \n        // Final approach drones (reduced number, more spread)\n        { id: 10, x: 1750, y: 800, vx: 1, vy: 0, radius: 14, color: '#f55', type: 'patroller', timer: 0, shootTimer: 0, shootSpeed: 30 },\n        { id: 11, x: 2000, y: 650, vx: 0, vy: 1, radius: 13, color: '#5f5', type: 'vertical', timer: 0, shootTimer: 0, shootSpeed: 35 },\n        \n// Boss drone near the exit\n{ id: 12, x: 2300, y: 400, vx: 0.5, vy: 0.5, radius: 22, color: '#f55', type: 'boss', timer: 0, shootTimer: 0, health: 100, shootSpeed: 20 }\n],\npowerUps: [\n  { x: 150, y: 1600, radius: 10, type: 'health', color: '#2ecc71', active: true },\n  { x: 950, y: 1600, radius: 10, type: 'energy', color: '#3498db', active: true },\n  { x: 1200, y: 1350, radius: 10, type: 'health', color: '#2ecc71', active: true },\n  { x: 700, y: 1150, radius: 10, type: 'energy', color: '#3498db', active: true },\n  { x: 1500, y: 800, radius: 10, type: 'health', color: '#2ecc71', active: true },\n  { x: 2000, y: 700, radius: 10, type: 'energy', color: '#3498db', active: true }\n]\n},\n\n// Level 1 - Khe Sanh\n{\nname: \"Khe Sanh\",\nindex: 1, // Added index to ensure consistency\nplatforms: [\n  // Starting area\n  { x: 100, y: 1800, width: 300, height: 50, color: '#444' },\n  \n  // Scattered island-like platforms\n  { x: 600, y: 1700, width: 200, height: 30, color: '#55ffee' },\n  { x: 1000, y: 1600, width: 180, height: 30, color: '#ff55ee' },\n  { x: 1400, y: 1500, width: 220, height: 30, color: '#ffff55' },\n  { x: 800, y: 1400, width: 150, height: 30, color: '#444' },\n  { x: 1200, y: 1300, width: 180, height: 30, color: '#55ff55' },\n  { x: 1600, y: 1200, width: 200, height: 30, color: '#ff5555' },\n  { x: 1000, y: 1100, width: 170, height: 30, color: '#5555ff' },\n  { x: 1400, y: 1000, width: 190, height: 30, color: '#444' },\n  { x: 1800, y: 900, width: 210, height: 30, color: '#ff55ff' },\n  { x: 1500, y: 800, width: 180, height: 30, color: '#55ffff' },\n  { x: 1900, y: 700, width: 200, height: 30, color: '#ffff55' },\n  { x: 2200, y: 600, width: 220, height: 30, color: '#444' },\n  \n  // Moving platforms\n  { x: 450, y: 1750, width: 100, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 2, minX: 450, maxX: 550 },\n  { x: 850, y: 1500, width: 100, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 3, minX: 850, maxX: 950 },\n  { x: 1300, y: 1100, width: 100, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 2, minX: 1300, maxX: 1400 },\n  { x: 1700, y: 800, width: 100, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 3, minX: 1700, maxX: 1800 },\n  { x: 2000, y: 650, width: 100, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 2, minX: 2000, maxX: 2100 }\n],\ndoors: {\n  start: { x: 150, y: 1730, width: 40, height: 70, color: '#2ecc71' },\n  end: { x: 2250, y: 530, width: 40, height: 70, color: '#e74c3c' }\n},\ndrones: [\n  { id: 1, x: 300, y: 1700, vx: 1, vy: 0, radius: 12, color: '#f55', type: 'patroller', timer: 0, shootTimer: 0, shootSpeed: 40 },\n  { id: 2, x: 800, y: 1650, vx: 0, vy: 1, radius: 14, color: '#f5f', type: 'vertical', timer: 0, shootTimer: 0, shootSpeed: 60 },\n  { id: 3, x: 1200, y: 1550, vx: 1.2, vy: 0.8, radius: 15, color: '#f95', type: 'bouncer', timer: 0, shootTimer: 0, shootSpeed: 40 },\n  { id: 4, x: 900, y: 1350, vx: 0, vy: 0, radius: 18, color: '#5ff', type: 'turret', timer: 0, shootTimer: 0, shootSpeed: 30 },\n  { id: 5, x: 1300, y: 1250, vx: 1, vy: 0, radius: 13, color: '#f55', type: 'patroller', timer: 0, shootTimer: 0, shootSpeed: 40 },\n  { id: 6, x: 1100, y: 1050, vx: 0, vy: 1, radius: 14, color: '#5f5', type: 'vertical', timer: 0, shootTimer: 0, shootSpeed: 35 },\n  { id: 7, x: 1600, y: 950, vx: 1.5, vy: 0, radius: 14, color: '#f95', type: 'patroller', timer: 0, shootTimer: 0, shootSpeed: 45 },\n  { id: 8, x: 1600, y: 750, vx: 0, vy: 0, radius: 18, color: '#5ff', type: 'turret', timer: 0, shootTimer: 0, shootSpeed: 25 },\n  { id: 9, x: 2000, y: 650, vx: 1.2, vy: 0.8, radius: 15, color: '#55f', type: 'bouncer', timer: 0, shootTimer: 0, shootSpeed: 40 },\n  { id: 10, x: 2300, y: 550, vx: 0.5, vy: 0.5, radius: 22, color: '#f55', type: 'boss', timer: 0, shootTimer: 0, health: 100, shootSpeed: 20 }\n],\npowerUps: [\n  { x: 250, y: 1750, radius: 10, type: 'health', color: '#2ecc71', active: true },\n  { x: 700, y: 1650, radius: 10, type: 'energy', color: '#3498db', active: true },\n  { x: 1100, y: 1550, radius: 10, type: 'health', color: '#2ecc71', active: true },\n  { x: 900, y: 1350, radius: 10, type: 'energy', color: '#3498db', active: true },\n  { x: 1500, y: 1150, radius: 10, type: 'health', color: '#2ecc71', active: true },\n  { x: 1700, y: 850, radius: 10, type: 'energy', color: '#3498db', active: true },\n  { x: 2100, y: 650, radius: 10, type: 'health', color: '#2ecc71', active: true }\n]\n},\n\n// Level 2 - Hamburger Hill\n{\nname: \"Hamburger Hill\",\nindex: 2, // Added index to ensure consistency\nplatforms: [\n  // Starting platform\n  { x: 50, y: 1800, width: 250, height: 40, color: '#444' }, \n  \n  // Cave-like structures with crystal platforms\n  { x: 400, y: 1750, width: 120, height: 20, color: '#55ffee' },\n  { x: 700, y: 1650, width: 150, height: 20, color: '#ff55ee' },\n  \n  // Stalactites and stalagmites\n  { x: 550, y: 1680, width: 10, height: 80, color: '#444' }, // Stalactite\n  { x: 650, y: 1680, width: 10, height: 100, color: '#444' }, // Stalactite\n  { x: 900, y: 1600, width: 10, height: 60, color: '#444' }, // Stalactite\n  \n  // More platforms\n  { x: 850, y: 1600, width: 180, height: 20, color: '#ff5555' },\n  { x: 1100, y: 1550, width: 150, height: 20, color: '#55ff55' },\n  \n  // More stalactites\n  { x: 1000, y: 1550, width: 10, height: 90, color: '#444' }, // Stalactite\n  { x: 1200, y: 1550, width: 10, height: 70, color: '#444' }, // Stalactite\n  \n  // Continuing path\n  { x: 1350, y: 1500, width: 130, height: 20, color: '#5555ff' },\n  { x: 1600, y: 1450, width: 140, height: 20, color: '#444' },\n  { x: 1850, y: 1400, width: 160, height: 20, color: '#ff55ff' },\n  \n  // Cave ceiling obstacles\n  { x: 1500, y: 1400, width: 10, height: 60, color: '#444' }, // Stalactite\n  { x: 1750, y: 1350, width: 10, height: 80, color: '#444' }, // Stalactite\n  \n  // Lower cave section\n  { x: 1700, y: 1300, width: 150, height: 20, color: '#55ffff' },\n  { x: 1400, y: 1200, width: 140, height: 20, color: '#ffff55' },\n  { x: 1100, y: 1100, width: 130, height: 20, color: '#ff5555' },\n  { x: 1300, y: 1000, width: 160, height: 20, color: '#444' },\n  { x: 1600, y: 900, width: 170, height: 20, color: '#55ff55' },\n  { x: 1900, y: 800, width: 180, height: 20, color: '#5555ff' },\n  { x: 2200, y: 700, width: 200, height: 20, color: '#ff55ee' },\n  { x: 2500, y: 600, width: 150, height: 20, color: '#55ffee' },\n  \n  // More ceiling formations\n  { x: 1500, y: 950, width: 10, height: 70, color: '#444' }, // Stalactite\n  { x: 1800, y: 850, width: 10, height: 90, color: '#444' }, // Stalactite\n  { x: 2100, y: 750, width: 10, height: 60, color: '#444' }, // Stalactite\n  { x: 2400, y: 650, width: 10, height: 80, color: '#444' }, // Stalactite\n  \n  // Moving platforms - crystal slabs\n  { x: 300, y: 1700, width: 80, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 2, minX: 300, maxX: 450 },\n  { x: 950, y: 1550, width: 80, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 3, minX: 950, maxX: 1100 },\n  { x: 1500, y: 1350, width: 80, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 2, minX: 1500, maxX: 1650 },\n  { x: 1200, y: 1050, width: 80, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 2, minX: 1200, maxX: 1350 },\n  { x: 2000, y: 750, width: 80, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 3, minX: 2000, maxX: 2150 },\n  { x: 2350, y: 650, width: 80, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 2, minX: 2350, maxX: 2500 }\n],\ndoors: {\n  start: { x: 100, y: 1730, width: 40, height: 70, color: '#2ecc71' },\n  end: { x: 2500, y: 530, width: 40, height: 70, color: '#e74c3c' }\n},\ndrones: [\n  { id: 1, x: 400, y: 1650, vx: 1, vy: 0, radius: 12, color: '#f55', type: 'patroller', timer: 0, shootTimer: 0, shootSpeed: 40 },\n  { id: 2, x: 750, y: 1550, vx: 0, vy: 1, radius: 14, color: '#f5f', type: 'vertical', timer: 0, shootTimer: 0, shootSpeed: 60 },\n  { id: 3, x: 1150, y: 1450, vx: 1.2, vy: 0.8, radius: 15, color: '#f95', type: 'bouncer', timer: 0, shootTimer: 0, shootSpeed: 40 },\n  { id: 4, x: 1450, y: 1350, vx: 0, vy: 0, radius: 18, color: '#5ff', type: 'turret', timer: 0, shootTimer: 0, shootSpeed: 30 },\n  { id: 5, x: 1750, y: 1250, vx: 1, vy: 0, radius: 13, color: '#f55', type: 'patroller', timer: 0, shootTimer: 0, shootSpeed: 40 },\n  { id: 6, x: 1500, y: 1100, vx: 0, vy: 1, radius: 14, color: '#5f5', type: 'vertical', timer: 0, shootTimer: 0, shootSpeed: 35 },\n  { id: 7, x: 1700, y: 850, vx: 1.5, vy: 0, radius: 14, color: '#f95', type: 'patroller', timer: 0, shootTimer: 0, shootSpeed: 45 },\n  { id: 8, x: 2100, y: 650, vx: 0, vy: 0, radius: 18, color: '#5ff', type: 'turret', timer: 0, shootTimer: 0, shootSpeed: 25 },\n  { id: 9, x: 2400, y: 550, vx: 0.5, vy: 0.5, radius: 22, color: '#f55', type: 'boss', timer: 0, shootTimer: 0, health: 100, shootSpeed: 20 }\n],\npowerUps: [\n  { x: 450, y: 1700, radius: 10, type: 'health', color: '#2ecc71', active: true },\n  { x: 800, y: 1600, radius: 10, type: 'energy', color: '#3498db', active: true },\n  { x: 1200, y: 1500, radius: 10, type: 'health', color: '#2ecc71', active: true },\n  { x: 1550, y: 1400, radius: 10, type: 'energy', color: '#3498db', active: true },\n  { x: 1300, y: 1150, radius: 10, type: 'health', color: '#2ecc71', active: true },\n  { x: 1800, y: 850, radius: 10, type: 'energy', color: '#3498db', active: true },\n  { x: 2300, y: 650, radius: 10, type: 'health', color: '#2ecc71', active: true }\n]\n},\n\n// Level 3 - Hue City\n{\nname: \"Hue City\",\nindex: 3, // Added index to ensure consistency\nplatforms: [\n  // Starting platform\n  { x: 150, y: 1800, width: 200, height: 30, color: '#444' },\n  \n  // Platforms arranged in a fortress-like structure\n  // Outer walls\n  { x: 450, y: 1750, width: 300, height: 20, color: '#55ffee' }, // Bottom wall\n  { x: 450, y: 1650, width: 20, height: 100, color: '#55ffee' }, // Left wall\n  { x: 730, y: 1650, width: 20, height: 100, color: '#55ffee' }, // Right wall\n  \n  // Inner fortress\n  { x: 500, y: 1700, width: 200, height: 20, color: '#ff55ee' }, // Platform\n  { x: 550, y: 1650, width: 100, height: 20, color: '#ff55ee' }, // Platform\n  \n  // Connection platform\n  { x: 350, y: 1600, width: 80, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 3, minX: 350, maxX: 450 },\n  \n  // Second fortress section\n  { x: 850, y: 1600, width: 300, height: 20, color: '#ffff55' }, // Bottom wall\n  { x: 850, y: 1500, width: 20, height: 100, color: '#ffff55' }, // Left wall\n  { x: 1130, y: 1500, width: 20, height: 100, color: '#ffff55' }, // Right wall\n  \n  // Inner platforms\n  { x: 900, y: 1550, width: 200, height: 20, color: '#ff5555' }, // Platform\n  { x: 950, y: 1500, width: 100, height: 20, color: '#ff5555' }, // Platform\n  \n  // Connection platform\n  { x: 750, y: 1550, width: 80, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 2, minX: 750, maxX: 850 },\n  \n  // Third fortress section\n  { x: 1250, y: 1450, width: 300, height: 20, color: '#55ff55' }, // Bottom wall\n  { x: 1250, y: 1350, width: 20, height: 100, color: '#55ff55' }, // Left wall\n  { x: 1530, y: 1350, width: 20, height: 100, color: '#55ff55' }, // Right wall\n  \n  // Inner platforms\n  { x: 1300, y: 1400, width: 200, height: 20, color: '#5555ff' }, // Platform\n  { x: 1350, y: 1350, width: 100, height: 20, color: '#5555ff' }, // Platform\n  \n  // Connection platform\n  { x: 1150, y: 1400, width: 80, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 3, minX: 1150, maxX: 1250 },\n  \n  // Fourth fortress section\n  { x: 1650, y: 1300, width: 300, height: 20, color: '#ff55ff' }, // Bottom wall\n  { x: 1650, y: 1200, width: 20, height: 100, color: '#ff55ff' }, // Left wall\n  { x: 1930, y: 1200, width: 20, height: 100, color: '#ff55ff' }, // Right wall\n  \n  // Inner platforms\n  { x: 1700, y: 1250, width: 200, height: 20, color: '#55ffff' }, // Platform\n  { x: 1750, y: 1200, width: 100, height: 20, color: '#55ffff' }, // Platform\n  \n  // Connection platform\n  { x: 1550, y: 1250, width: 80, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 2, minX: 1550, maxX: 1650 },\n  \n  // Fifth fortress section\n  { x: 2050, y: 1150, width: 300, height: 20, color: '#ffff55' }, // Bottom wall\n  { x: 2050, y: 1050, width: 20, height: 100, color: '#ffff55' }, // Left wall\n  { x: 2330, y: 1050, width: 20, height: 100, color: '#ffff55' }, // Right wall\n  \n  // Inner platforms\n  { x: 2100, y: 1100, width: 200, height: 20, color: '#ff5555' }, // Platform\n  { x: 2150, y: 1050, width: 100, height: 20, color: '#ff5555' }, // Platform\n  \n  // Connection platform\n  { x: 1950, y: 1100, width: 80, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 3, minX: 1950, maxX: 2050 },\n  \n  // Final section with boss area\n  { x: 2150, y: 900, width: 400, height: 20, color: '#55ff55' }, // Bottom platform\n  { x: 2150, y: 750, width: 20, height: 150, color: '#55ff55' }, // Left wall\n  { x: 2530, y: 750, width: 20, height: 150, color: '#55ff55' }, // Right wall\n  { x: 2150, y: 750, width: 400, height: 20, color: '#55ff55' }, // Top wall\n],\ndoors: {\n  start: { x: 200, y: 1730, width: 40, height: 70, color: '#2ecc71' },\n  end: { x: 2300, y: 780, width: 40, height: 70, color: '#e74c3c' }\n},\ndrones: [\n  { id: 1, x: 500, y: 1700, vx: 1, vy: 0, radius: 12, color: '#f55', type: 'patroller', timer: 0, shootTimer: 0, shootSpeed: 40 },\n  { id: 2, x: 900, y: 1550, vx: 0, vy: 1, radius: 14, color: '#f5f', type: 'vertical', timer: 0, shootTimer: 0, shootSpeed: 60 },\n  { id: 3, x: 1300, y: 1400, vx: 1.2, vy: 0.8, radius: 15, color: '#f95', type: 'bouncer', timer: 0, shootTimer: 0, shootSpeed: 40 },\n  { id: 4, x: 1700, y: 1250, vx: 0, vy: 0, radius: 18, color: '#5ff', type: 'turret', timer: 0, shootTimer: 0, shootSpeed: 30 },\n  { id: 5, x: 2100, y: 1100, vx: 1, vy: 0, radius: 13, color: '#f55', type: 'patroller', timer: 0, shootTimer: 0, shootSpeed: 40 },\n  { id: 6, x: 2200, y: 950, vx: 0, vy: 1, radius: 14, color: '#5f5', type: 'vertical', timer: 0, shootTimer: 0, shootSpeed: 35 },\n  { id: 7, x: 2400, y: 850, vx: 0, vy: 0, radius: 18, color: '#5ff', type: 'turret', timer: 0, shootTimer: 0, shootSpeed: 30 },\n  { id: 8, x: 2300, y: 850, vx: 0.5, vy: 0.5, radius: 22, color: '#f55', type: 'boss', timer: 0, shootTimer: 0, health: 100, shootSpeed: 20 }\n],\npowerUps: [\n  { x: 550, y: 1700, radius: 10, type: 'health', color: '#2ecc71', active: true },\n  { x: 950, y: 1550, radius: 10, type: 'energy', color: '#3498db', active: true },\n  { x: 1350, y: 1400, radius: 10, type: 'health', color: '#2ecc71', active: true },\n  { x: 1750, y: 1250, radius: 10, type: 'energy', color: '#3498db', active: true },\n  { x: 2150, y: 1100, radius: 10, type: 'health', color: '#2ecc71', active: true },\n  { x: 2300, y: 900, radius: 10, type: 'energy', color: '#3498db', active: true }\n]\n},\n\n// Level 4 - Tet Offensive\n{\nname: \"Tet Offensive\",\nindex: 4, // Added index to ensure consistency\nplatforms: [\n  // Starting platform\n  { x: 100, y: 1800, width: 300, height: 40, color: '#444' },\n  \n  // Buildings with neon colors\n  // Building 1\n  { x: 550, y: 1750, width: 100, height: 200, color: '#ff55ee' }, \n  // Bridge 1\n  { x: 400, y: 1700, width: 150, height: 15, color: '#ffff55' },\n  \n  // Building 2\n  { x: 750, y: 1700, width: 120, height: 250, color: '#55ffee' },\n  // Bridge 2\n  { x: 650, y: 1650, width: 100, height: 15, color: '#ffff55' },\n  \n  // Building 3\n  { x: 950, y: 1650, width: 150, height: 300, color: '#ff5555' },\n  // Bridge 3\n  { x: 870, y: 1600, width: 80, height: 15, color: '#ffff55' },\n  \n  // Building 4\n  { x: 1200, y: 1600, width: 130, height: 350, color: '#55ff55' },\n  // Bridge 4\n  { x: 1100, y: 1550, width: 100, height: 15, color: '#ffff55' },\n  \n  // Building 5\n  { x: 1450, y: 1550, width: 120, height: 400, color: '#5555ff' },\n  // Bridge 5\n  { x: 1330, y: 1500, width: 120, height: 15, color: '#ffff55' },\n  \n  // Building 6\n  { x: 1700, y: 1500, width: 140, height: 450, color: '#ff55ff' },\n  // Bridge 6\n  { x: 1570, y: 1450, width: 130, height: 15, color: '#ffff55' },\n  \n  // Building 7\n  { x: 1950, y: 1450, width: 160, height: 500, color: '#55ffff' },\n  // Bridge 7\n  { x: 1840, y: 1400, width: 110, height: 15, color: '#ffff55' },\n  \n// Building 8\n{ x: 2200, y: 1400, width: 180, height: 550, color: '#ffff55' },\n// Bridge 8\n{ x: 2110, y: 1350, width: 90, height: 15, color: '#ffff55' },\n\n// Building 9\n{ x: 2450, y: 1350, width: 200, height: 600, color: '#ff5555' },\n// Bridge 9\n{ x: 2380, y: 1300, width: 70, height: 15, color: '#ffff55' },\n\n// Moving platforms (elevators)\n{ x: 600, y: 1500, width: 50, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 2, minX: 600, maxX: 600, minY: 1500, maxY: 1700, vertical: true },\n{ x: 800, y: 1450, width: 50, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 2, minX: 800, maxX: 800, minY: 1450, maxY: 1650, vertical: true },\n{ x: 1000, y: 1350, width: 50, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 3, minX: 1000, maxX: 1000, minY: 1350, maxY: 1600, vertical: true },\n{ x: 1250, y: 1250, width: 50, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 3, minX: 1250, maxX: 1250, minY: 1250, maxY: 1550, vertical: true },\n{ x: 1500, y: 1150, width: 50, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 4, minX: 1500, maxX: 1500, minY: 1150, maxY: 1500, vertical: true },\n{ x: 1750, y: 1050, width: 50, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 4, minX: 1750, maxX: 1750, minY: 1050, maxY: 1450, vertical: true },\n{ x: 2000, y: 950, width: 50, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 5, minX: 2000, maxX: 2000, minY: 950, maxY: 1400, vertical: true },\n{ x: 2250, y: 850, width: 50, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 5, minX: 2250, maxX: 2250, minY: 850, maxY: 1350, vertical: true },\n{ x: 2500, y: 750, width: 50, height: 15, color: '#ff9500', movingPlatform: true, direction: 1, speed: 6, minX: 2500, maxX: 2500, minY: 750, maxY: 1300, vertical: true },\n],\ndoors: {\nstart: { x: 150, y: 1730, width: 40, height: 70, color: '#2ecc71' },\nend: { x: 2500, y: 680, width: 40, height: 70, color: '#e74c3c' }\n},\ndrones: [\n{ id: 1, x: 600, y: 1650, vx: 1, vy: 0, radius: 12, color: '#f55', type: 'patroller', timer: 0, shootTimer: 0, shootSpeed: 40 },\n{ id: 2, x: 850, y: 1600, vx: 0, vy: 1, radius: 14, color: '#f5f', type: 'vertical', timer: 0, shootTimer: 0, shootSpeed: 60 },\n{ id: 3, x: 1050, y: 1550, vx: 1.2, vy: 0.8, radius: 15, color: '#f95', type: 'bouncer', timer: 0, shootTimer: 0, shootSpeed: 40 },\n{ id: 4, x: 1300, y: 1450, vx: 0, vy: 0, radius: 18, color: '#5ff', type: 'turret', timer: 0, shootTimer: 0, shootSpeed: 30 },\n{ id: 5, x: 1550, y: 1350, vx: 1, vy: 0, radius: 13, color: '#f55', type: 'patroller', timer: 0, shootTimer: 0, shootSpeed: 40 },\n{ id: 6, x: 1800, y: 1250, vx: 0, vy: 1, radius: 14, color: '#5f5', type: 'vertical', timer: 0, shootTimer: 0, shootSpeed: 35 },\n{ id: 7, x: 2050, y: 1150, vx: 1.5, vy: 0, radius: 14, color: '#f95', type: 'patroller', timer: 0, shootTimer: 0, shootSpeed: 45 },\n{ id: 8, x: 2300, y: 1050, vx: 0, vy: 0, radius: 18, color: '#5ff', type: 'turret', timer: 0, shootTimer: 0, shootSpeed: 25 },\n{ id: 9, x: 2500, y: 850, vx: 0.5, vy: 0.5, radius: 22, color: '#f55', type: 'boss', timer: 0, shootTimer: 0, health: 100, shootSpeed: 20 }\n],\npowerUps: [\n{ x: 600, y: 1600, radius: 10, type: 'health', color: '#2ecc71', active: true },\n{ x: 900, y: 1550, radius: 10, type: 'energy', color: '#3498db', active: true },\n{ x: 1200, y: 1450, radius: 10, type: 'health', color: '#2ecc71', active: true },\n{ x: 1500, y: 1350, radius: 10, type: 'energy', color: '#3498db', active: true },\n{ x: 1800, y: 1200, radius: 10, type: 'health', color: '#2ecc71', active: true },\n{ x: 2100, y: 1100, radius: 10, type: 'energy', color: '#3498db', active: true },\n{ x: 2400, y: 950, radius: 10, type: 'health', color: '#2ecc71', active: true },\n{ x: 2550, y: 850, radius: 10, type: 'energy', color: '#3498db', active: true }\n]\n}\n];\n\n// Music functions\nconst playLevelMusic = (levelName) => {\nif (!audioRef.current) {\naudioRef.current = new Audio();\n}\n\n// Stop any currently playing music\nstopMusic();\n\n// Set the new music source\nconst musicTrack = battleMusic[levelName];\nif (musicTrack) {\naudioRef.current.src = `sounds/${musicTrack}`;\naudioRef.current.loop = true;\naudioRef.current.volume = 0.5;\naudioRef.current.play().catch(e => console.log(\"Audio play failed:\", e));\n}\n};\n\nconst stopMusic = () => {\nif (audioRef.current) {\naudioRef.current.pause();\naudioRef.current.currentTime = 0;\n}\n};\n\n// Handle canvas resize based on window size\nuseEffect(() => {\nconst handleResize = () => {\nconst maxWidth = Math.min(window.innerWidth - 40, 1200);\nconst maxHeight = Math.min(window.innerHeight - 100, 800);\n\n// Maintain aspect ratio\nconst aspectRatio = 3 / 2;\nlet width = maxWidth;\nlet height = width / aspectRatio;\n\nif (height > maxHeight) {\nheight = maxHeight;\nwidth = height * aspectRatio;\n}\n\nsetCanvasSize({ width, height });\n};\n\n// Set initial size\nhandleResize();\n\n// Add event listener\nwindow.addEventListener('resize', handleResize);\n\n// Clean up\nreturn () => {\nwindow.removeEventListener('resize', handleResize);\n};\n}, []);\n\n// Handle keyboard input\nuseEffect(() => {\nconst handleKeyDown = (event) => {\nswitch(event.key) {\ncase 'ArrowUp':\ncase 'w':\n  setKeys(prev => ({ ...prev, up: true }));\n  break;\ncase 'ArrowDown':\ncase 's':\n  setKeys(prev => ({ ...prev, down: true }));\n  break;\ncase 'ArrowLeft':\ncase 'a':\n  setKeys(prev => ({ ...prev, left: true }));\n  break;\ncase 'ArrowRight':\ncase 'd':\n  setKeys(prev => ({ ...prev, right: true }));\n  break;\ncase ' ': // Space\n  setKeys(prev => ({ ...prev, space: true }));\n  \n  if (gameState === 'menu') {\n    // Start game\n    startNewGame();\n  } else if (gameState === 'gameOver') {\n    setGameState('menu');\n  } else if (gameState === 'info') {\n    // Close info and start level\n    setShowInfo(false);\n    setGameState('playing');\n    playLevelMusic(levels[currentLevel].name);\n  }\n  break;\ndefault:\n  break;\n}\n};\n\nconst handleKeyUp = (event) => {\nswitch(event.key) {\ncase 'ArrowUp':\ncase 'w':\n  setKeys(prev => ({ ...prev, up: false }));\n  break;\ncase 'ArrowDown':\ncase 's':\n  setKeys(prev => ({ ...prev, down: false }));\n  break;\ncase 'ArrowLeft':\ncase 'a':\n  setKeys(prev => ({ ...prev, left: false }));\n  break;\ncase 'ArrowRight':\ncase 'd':\n  setKeys(prev => ({ ...prev, right: false }));\n  break;\ncase ' ': // Space\n  setKeys(prev => ({ ...prev, space: false }));\n  break;\ndefault:\n  break;\n}\n};\n\nwindow.addEventListener('keydown', handleKeyDown);\nwindow.addEventListener('keyup', handleKeyUp);\n\nreturn () => {\nwindow.removeEventListener('keydown', handleKeyDown);\nwindow.removeEventListener('keyup', handleKeyUp);\n};\n}, [gameState, currentLevel]);\n\n// Handle mouse input for shield\nuseEffect(() => {\nconst canvas = canvasRef.current;\nif (!canvas) return;\n\nconst handleMouseDown = () => {\nsetMouse(prev => ({ ...prev, down: true }));\n};\n\nconst handleMouseUp = () => {\nsetMouse(prev => ({ ...prev, down: false }));\n};\n\nconst handleMouseMove = (event) => {\nconst rect = canvas.getBoundingClientRect();\nconst x = event.clientX - rect.left;\nconst y = event.clientY - rect.top;\n\nsetMouse(prev => ({ ...prev, x, y }));\n};\n\ncanvas.addEventListener('mousedown', handleMouseDown);\ncanvas.addEventListener('mouseup', handleMouseUp);\ncanvas.addEventListener('mousemove', handleMouseMove);\ncanvas.addEventListener('mouseleave', handleMouseUp);\n\n// Touch events for mobile\nconst handleTouchStart = (event) => {\nevent.preventDefault();\nsetMouse(prev => ({ ...prev, down: true }));\n};\n\nconst handleTouchEnd = (event) => {\nevent.preventDefault();\nsetMouse(prev => ({ ...prev, down: false }));\n};\n\nconst handleTouchMove = (event) => {\nevent.preventDefault();\nconst rect = canvas.getBoundingClientRect();\nconst touch = event.touches[0];\nconst x = touch.clientX - rect.left;\nconst y = touch.clientY - rect.top;\n\nsetMouse(prev => ({ ...prev, x, y }));\n};\n\ncanvas.addEventListener('touchstart', handleTouchStart);\ncanvas.addEventListener('touchend', handleTouchEnd);\ncanvas.addEventListener('touchmove', handleTouchMove);\n\nreturn () => {\ncanvas.removeEventListener('mousedown', handleMouseDown);\ncanvas.removeEventListener('mouseup', handleMouseUp);\ncanvas.removeEventListener('mousemove', handleMouseMove);\ncanvas.removeEventListener('mouseleave', handleMouseUp);\ncanvas.removeEventListener('touchstart', handleTouchStart);\ncanvas.removeEventListener('touchend', handleTouchEnd);\ncanvas.removeEventListener('touchmove', handleTouchMove);\n};\n}, []);\n\n// Modified resetGame to handle level changes and persistent health/energy\n// FIX: Fixed the issue with transition screen showing one level but loading another\nconst resetGame = (isFirstLevel = false) => {\n// If it's the first level, randomly select a level to start with\nif (isFirstLevel) {\nconst randomLevelIndex = Math.floor(Math.random() * levels.length);\nsetCurrentLevel(randomLevelIndex);\n} else {\n// Move to the next level from the current level's index\n// Use the level's index property to determine the next level\nconst currentLevelIndex = levels[currentLevel].index;\nconst nextLevelIndex = (currentLevelIndex + 1) % levels.length;\n\n// Find the level with the matching index\nconst nextLevel = levels.findIndex(level => level.index === nextLevelIndex);\nsetCurrentLevel(nextLevel);\n}\n\n// Get the level data\nconst levelData = levels[currentLevel];\n\n// Reset player position to start door\nsetPlayer({\nx: levelData.doors.start.x + levelData.doors.start.width / 2,\ny: levelData.doors.start.y - 20,\nvx: 0,\nvy: 0,\nradius: 15,\ncolor: '#36f9f6',\ngrounded: false,\njumping: false\n});\n\n// Reset camera position\nsetCamera({\nx: Math.max(0, levelData.doors.start.x - canvasSize.width / 2),\ny: Math.max(0, levelData.doors.start.y - canvasSize.height / 2)\n});\n\n// Reset projectiles\nsetProjectiles([]);\n\n// If it's the first level, reset health and energy\nif (isFirstLevel) {\nsetHealth(100);\nsetEnergy(100);\n}\n\n// Set level data\nsetPlatforms(levelData.platforms);\nsetDoors(levelData.doors);\nsetDrones(levelData.drones);\nsetPowerUps(levelData.powerUps);\n\n// Show battle info and description before starting\nsetInfoText(battleDescriptions[levelData.name]);\nsetShowInfo(true);\nsetGameState('info');\n};\n\n// Start a new game\nconst startNewGame = () => {\nresetGame(true); // Pass true to indicate it's the first level\n};\n\n// Collision detection utility\nconst checkCollision = (circle, rect) => {\n// Find the closest point to the circle within the rectangle\nconst closestX = Math.max(rect.x, Math.min(circle.x, rect.x + rect.width));\nconst closestY = Math.max(rect.y, Math.min(circle.y, rect.y + rect.height));\n\n// Calculate the distance between the circle's center and the closest point\nconst distanceX = circle.x - closestX;\nconst distanceY = circle.y - closestY;\n\n// If the distance is less than the circle's radius, an intersection occurs\nconst distanceSquared = distanceX * distanceX + distanceY * distanceY;\nreturn distanceSquared < circle.radius * circle.radius;\n};\n\n// Circle-Circle collision\nconst checkCircleCollision = (circle1, circle2) => {\nconst dx = circle1.x - circle2.x;\nconst dy = circle1.y - circle2.y;\nconst distance = Math.sqrt(dx * dx + dy * dy);\nreturn distance < circle1.radius + circle2.radius;\n};\n\n// Automatically go to next level when winning\nuseEffect(() => {\nif (gameState === 'win') {\n  // Stop current level music\n  stopMusic();\n  \n  // Short delay before loading the next level\n  const nextLevelTimer = setTimeout(() => {\n    setGameState('playing');\n    resetGame(false); // Pass false to indicate it's not the first level\n  }, 2000);\n  \n  return () => clearTimeout(nextLevelTimer);\n}\n}, [gameState]);\n\n// Game loop\nuseEffect(() => {\n  if (gameState !== 'playing') return;\n  \n  let animationFrameId;\n  let lastTime = 0;\n  \n  const gameLoop = (time) => {\n    if (gameState !== 'playing') return;\n    \n    // Delta time in seconds\n    const deltaTime = Math.min((time - lastTime) / 1000, 0.1); // Cap at 0.1 to prevent huge jumps\n    lastTime = time;\n    \n    // Update energy for shield\n    if (mouse.down && energy > 0) {\n      // Activate shield and drain energy at an extremely slow rate\n      setPlayerStats(prev => ({ ...prev, shield: true }));\n      \n      setEnergy(prev => Math.max(0, prev - deltaTime * 4)); // Very slow drain\n    } else {\n      // Deactivate shield and regenerate energy\n      setPlayerStats(prev => ({ ...prev, shield: false }));\n      setEnergy(prev => Math.min(100, prev + deltaTime * 6)); \n    }\n    \n    // When energy is 0, drain health very slowly\n    if (energy <= 0) {\n      setHealth(prev => {\n        const newHealth = prev - deltaTime * 2; // Very slow drain\n        if (newHealth <= 0) {\n          setGameState('gameOver');\n          stopMusic(); // Stop music on game over\n          return 0;\n        }\n        return newHealth;\n      });\n    }\n    \n    // Update moving platforms\n    setPlatforms(prevPlatforms => {\n      return prevPlatforms.map(platform => {\n        if (platform.movingPlatform) {\n          const newPlatform = { ...platform };\n          \n          if (platform.vertical) {\n            // Move platform vertically\n            newPlatform.y += platform.direction * platform.speed;\n            \n            // Change direction if reaching limits\n            if (newPlatform.y <= platform.minY) {\n              newPlatform.direction = 1;\n            } else if (newPlatform.y >= platform.maxY) {\n              newPlatform.direction = -1;\n            }\n          } else {\n            // Move platform horizontally\n            newPlatform.x += platform.direction * platform.speed;\n            \n            // Change direction if reaching limits\n            if (newPlatform.x <= platform.minX) {\n              newPlatform.direction = 1;\n            } else if (newPlatform.x >= platform.maxX) {\n              newPlatform.direction = -1;\n            }\n          }\n          \n          return newPlatform;\n        }\n        \n        return platform;\n      });\n    });\n    \n    // Update player\n    setPlayer(prevPlayer => {\n      // Player update code (no changes needed)\n      let newPlayer = { ...prevPlayer };\n      \n      // Apply gravity\n      newPlayer.vy += gravity;\n      \n      // Apply horizontal movement\n      if (keys.left) {\n        newPlayer.vx = -playerStats.speed;\n      } else if (keys.right) {\n        newPlayer.vx = playerStats.speed;\n      } else {\n        newPlayer.vx *= friction;\n      }\n      \n      // Apply jump\n      if (keys.up && newPlayer.grounded && !newPlayer.jumping) {\n        newPlayer.vy = jumpForce;\n        newPlayer.grounded = false;\n        newPlayer.jumping = true;\n      }\n      \n      // Update position\n      newPlayer.x += newPlayer.vx;\n      newPlayer.y += newPlayer.vy;\n      \n      // Platform collisions and other player update code\n      // (No changes needed)\n      \n      return newPlayer;\n    });\n    \n    // Update drones - THIS IS THE MISSING SECTION THAT NEEDS TO BE ADDED BACK\n    setDrones(prevDrones => {\n      return prevDrones.map(drone => {\n        const newDrone = { ...drone };\n        newDrone.timer += 1;\n        newDrone.shootTimer = (newDrone.shootTimer || 0) + 1;\n        \n        // All drones shoot at player\n        if (newDrone.shootTimer > newDrone.shootSpeed) {\n          newDrone.shootTimer = 0;\n          \n          // Calculate direction to player\n          const dx = player.x - newDrone.x;\n          const dy = player.y - newDrone.y;\n          const dist = Math.sqrt(dx * dx + dy * dy);\n          \n          // Only shoot if player is within range\n          if (dist < 500) {\n            // Add projectile with slight randomization for difficulty tuning\n            const accuracy = newDrone.type === 'boss' ? 0.05 : 0.15; // Boss is more accurate\n            const spreadX = (Math.random() - 0.5) * 2 * accuracy;\n            const spreadY = (Math.random() - 0.5) * 2 * accuracy;\n            \n            // Slower projectiles for better gameplay\n            const projectileSpeed = newDrone.type === 'boss' ? 4 : 3;\n            \n            setProjectiles(prev => [\n              ...prev,\n              {\n                x: newDrone.x,\n                y: newDrone.y,\n                vx: (dx / dist + spreadX) * projectileSpeed,\n                vy: (dy / dist + spreadY) * projectileSpeed,\n                radius: newDrone.type === 'boss' ? 8 : 5,\n                color: newDrone.color,\n                timer: 0,\n                source: 'drone'\n              }\n            ]);\n          }\n        }\n        \n        // Different behavior based on drone type\n        switch (newDrone.type) {\n          case 'patroller':\n            // Patrol back and forth\n            if (newDrone.timer > 100) {\n              newDrone.vx *= -1;\n              newDrone.timer = 0;\n            }\n            break;\n          \n          case 'vertical':\n            // Move up and down\n            if (newDrone.timer > 80) {\n              newDrone.vy *= -1;\n              newDrone.timer = 0;\n            }\n            break;\n          \n          case 'chaser':\n            // Chase player\n            const dx = player.x - newDrone.x;\n            const dy = player.y - newDrone.y;\n            const dist = Math.sqrt(dx * dx + dy * dy);\n            \n            if (dist < 300) {\n              newDrone.vx = dx / dist * 2;\n              newDrone.vy = dy / dist * 2;\n            } else {\n              // Random movement when player is far\n              if (newDrone.timer > 50) {\n                newDrone.vx = (Math.random() - 0.5) * 2;\n                newDrone.vy = (Math.random() - 0.5) * 2;\n                newDrone.timer = 0;\n              }\n            }\n            break;\n          \n          case 'turret':\n            // Doesn't move, just shoots\n            newDrone.vx = 0;\n            newDrone.vy = 0;\n            break;\n            \n          case 'bouncer':\n            // Bounces around randomly and fast\n            if (newDrone.timer > 30) {\n              newDrone.vx = (Math.random() - 0.5) * 4;\n              newDrone.vy = (Math.random() - 0.5) * 4;\n              newDrone.timer = 0;\n            }\n            break;\n            \n          case 'boss':\n            // Complex movement pattern\n            if (newDrone.timer % 120 < 60) {\n              // Circle motion\n              const angle = newDrone.timer * 0.05;\n              newDrone.vx = Math.cos(angle) * 2;\n              newDrone.vy = Math.sin(angle) * 2;\n            } else if (newDrone.timer % 120 < 90) {\n              // Charge at player\n              const dx = player.x - newDrone.x;\n              const dy = player.y - newDrone.y;\n              const dist = Math.sqrt(dx * dx + dy * dy);\n              \n              if (dist > 10) {\n                newDrone.vx = dx / dist * 3;\n                newDrone.vy = dy / dist * 3;\n              }\n            } else {\n              // Retreat\n              const dx = player.x - newDrone.x;\n              const dy = player.y - newDrone.y;\n              const dist = Math.sqrt(dx * dx + dy * dy);\n              \n              if (dist > 10) {\n                newDrone.vx = -dx / dist * 2;\n                newDrone.vy = -dy / dist * 2;\n              }\n            }\n            break;\n          \n          default:\n            break;\n        }\n        \n        // Apply movement\n        newDrone.x += newDrone.vx;\n        newDrone.y += newDrone.vy;\n        \n        // Keep drones within world bounds\n        if (newDrone.x - newDrone.radius < 0) {\n          newDrone.x = newDrone.radius;\n          newDrone.vx *= -1;\n        } else if (newDrone.x + newDrone.radius > worldSize.width) {\n          newDrone.x = worldSize.width - newDrone.radius;\n          newDrone.vx *= -1;\n        }\n        \n        if (newDrone.y - newDrone.radius < 0) {\n          newDrone.y = newDrone.radius;\n          newDrone.vy *= -1;\n        } else if (newDrone.y + newDrone.radius > worldSize.height) {\n          newDrone.y = worldSize.height - newDrone.radius;\n          newDrone.vy *= -1;\n        }\n        \n        // Check collision with player\n        if (checkCircleCollision(newDrone, player)) {\n          // If player has shield, NO damage at all\n          if (!playerStats.shield) {\n            setHealth(prev => {\n              // Drastically reduce damage rate\n              const newHealth = prev - 1; // Very low damage\n              if (newHealth <= 0) {\n                setGameState('gameOver');\n                stopMusic(); // Stop music on game over\n                return 0;\n              }\n              return newHealth;\n            });\n            \n            // Apply knockback to player (reduced)\n            setPlayer(prevPlayer => {\n              const knockbackX = prevPlayer.x - newDrone.x;\n              const knockbackY = prevPlayer.y - newDrone.y;\n              const knockbackDist = Math.sqrt(knockbackX * knockbackX + knockbackY * knockbackY);\n              \n              if (knockbackDist > 0) {\n                return {\n                  ...prevPlayer,\n                  vx: knockbackX / knockbackDist * 5, // Reduced knockback\n                  vy: knockbackY / knockbackDist * 5\n                };\n              }\n              \n              return prevPlayer;\n            });\n          }\n          // If shield is active, no damage and no knockback occurs\n        }\n        \n        // Collision with platforms\n        for (const platform of platforms) {\n          if (checkCollision(newDrone, platform)) {\n            // Simple bounce behavior\n            if (Math.abs(newDrone.vx) > Math.abs(newDrone.vy)) {\n              newDrone.vx *= -1;\n            } else {\n              newDrone.vy *= -1;\n            }\n          }\n        }\n        \n        return newDrone;\n      });\n    });\n    \n    // Update projectiles\n    setProjectiles(prevProjectiles => {\n      const updatedProjectiles = prevProjectiles.map(projectile => {\n        const newProjectile = { ...projectile };\n        \n        // Move projectile\n        newProjectile.x += newProjectile.vx;\n        newProjectile.y += newProjectile.vy;\n        \n        // Increase timer\n        newProjectile.timer += 1;\n        \n        return newProjectile;\n      });\n      \n      // Remove projectiles that are out of bounds or too old\n      const filteredProjectiles = updatedProjectiles.filter(projectile => {\n        // Remove if out of bounds\n        if (\n          projectile.x < -projectile.radius ||\n          projectile.x > worldSize.width + projectile.radius ||\n          projectile.y < -projectile.radius ||\n          projectile.y > worldSize.height + projectile.radius ||\n          projectile.timer > 120\n        ) {\n          return false;\n        }\n        \n        // Check collision with player for drone projectiles\n        if (projectile.source === 'drone' && checkCircleCollision(projectile, player)) {\n          // If player has shield, block projectile\n          if (playerStats.shield) {\n            return false; // Remove projectile without damage\n          } else {\n            // Much less damage from projectiles\n            setHealth(prev => {\n              const newHealth = prev - 2; // Reduced from 7 to 2\n              if (newHealth <= 0) {\n                setGameState('gameOver');\n                stopMusic(); // Stop music on game over\n                return 0;\n              }\n              return newHealth;\n            });\n            \n            return false;\n          }\n        }\n        \n        // Check collision with platforms\n        for (const platform of platforms) {\n          if (checkCollision(projectile, platform)) {\n            return false;\n          }\n        }\n        \n        return true;\n      });\n      \n      return filteredProjectiles;\n    });\n    \n    animationFrameId = requestAnimationFrame(gameLoop);\n  };\n  \n  animationFrameId = requestAnimationFrame(gameLoop);\n  \n  return () => {\n    cancelAnimationFrame(animationFrameId);\n  };\n}, [gameState, keys, player, platforms, doors, powerUps, mouse, energy, playerStats, worldSize.width, worldSize.height, canvasSize.width, canvasSize.height, gravity, friction, jumpForce, currentLevel]);\n// Render game\nuseEffect(() => {\nconst canvas = canvasRef.current;\nif (!canvas) return;\n\nconst ctx = canvas.getContext('2d');\n\n// Clear canvas with dark background for N-GON style\nctx.fillStyle = '#111';\nctx.fillRect(0, 0, canvas.width, canvas.height);\n\n// Draw based on game state\nif (gameState === 'menu') {\n  // Draw title\n  ctx.fillStyle = '#36f9f6'; // Bright cyan\n  ctx.font = 'bold 48px Arial';\n  ctx.textAlign = 'center';\n  ctx.fillText('VIET-GON', canvas.width / 2, canvas.height / 3);\n  \n  // Draw subtitle\n  ctx.fillStyle = '#f55';\n  ctx.font = 'bold 24px Arial';\n  ctx.fillText('Vietnam War Battles', canvas.width / 2, canvas.height / 3 + 40);\n  \n  // Draw instructions\n  ctx.fillStyle = '#fff'; // White text for dark background\n  ctx.font = '24px Arial';\n  ctx.fillText('Press SPACE to Start', canvas.width / 2, canvas.height / 2);\n  \n  ctx.font = '18px Arial';\n  ctx.fillText('Use ARROW KEYS or WASD to move and jump', canvas.width / 2, canvas.height / 2 + 40);\n  ctx.fillText('HOLD MOUSE BUTTON for shield (drains energy)', canvas.width / 2, canvas.height / 2 + 70);\n  ctx.fillText('When energy is 0, health will drain!', canvas.width / 2, canvas.height / 2 + 100);\n  ctx.fillText('Don\\'t fall off platforms - it\\'s instant death!', canvas.width / 2, canvas.height / 2 + 130);\n  ctx.fillText('Reach the red door to win and progress to next level', canvas.width / 2, canvas.height / 2 + 160);\n} else if (gameState === 'info') {\n  // Draw battle info screen\n  if (infoText) {\n    // Semi-transparent background\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    \n    // Title\n    ctx.fillStyle = '#36f9f6'; // Bright cyan\n    ctx.font = 'bold 36px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText(infoText.title, canvas.width / 2, 100);\n    \n    // Year\n    ctx.fillStyle = '#f55';\n    ctx.font = 'bold 24px Arial';\n    ctx.fillText(infoText.year, canvas.width / 2, 140);\n    \n    // Description - wrap text\n    ctx.fillStyle = '#fff';\n    ctx.font = '18px Arial';\n    \n    const maxWidth = canvas.width - 100;\n    const lineHeight = 30;\n    const words = infoText.description.split(' ');\n    let line = '';\n    let y = 200;\n    \n    for (let i = 0; i < words.length; i++) {\n      const testLine = line + words[i] + ' ';\n      const metrics = ctx.measureText(testLine);\n      const testWidth = metrics.width;\n      \n      if (testWidth > maxWidth) {\n        ctx.fillText(line, canvas.width / 2, y);\n        line = words[i] + ' ';\n        y += lineHeight;\n      } else {\n        line = testLine;\n      }\n    }\n    ctx.fillText(line, canvas.width / 2, y);\n    \n    // Gameplay tips\n    ctx.fillStyle = '#ffff55'; // Yellow\n    ctx.font = 'italic 18px Arial';\n    y += lineHeight * 2;\n    \n    const gameplayWords = infoText.gameplay.split(' ');\n    line = '';\n    \n    for (let i = 0; i < gameplayWords.length; i++) {\n      const testLine = line + gameplayWords[i] + ' ';\n      const metrics = ctx.measureText(testLine);\n      const testWidth = metrics.width;\n      \n      if (testWidth > maxWidth) {\n        ctx.fillText(line, canvas.width / 2, y);\n        line = gameplayWords[i] + ' ';\n        y += lineHeight;\n      } else {\n        line = testLine;\n      }\n    }\n    ctx.fillText(line, canvas.width / 2, y);\n    \n    // Draw instruction\n    ctx.fillStyle = '#fff';\n    ctx.font = '24px Arial';\n    ctx.fillText('Press SPACE to Begin Battle', canvas.width / 2, canvas.height - 100);\n    \n    // Load and display battle image\n    const img = new Image();\n    img.src = battleImages[infoText.title.split(' ').pop()];\n    img.onload = () => {\n      // Draw image with dim opacity\n      ctx.globalAlpha = 0.3;\n      ctx.drawImage(img, canvas.width / 2 - 200, canvas.height / 2 - 100, 400, 300);\n      ctx.globalAlpha = 1.0;\n    };\n  }\n} else if (gameState === 'playing' || gameState === 'gameOver' || gameState === 'win') {\n  // Apply camera transformation\n  ctx.save();\n  ctx.translate(-camera.x, -camera.y);\n  \n// Draw platforms\nplatforms.forEach(platform => {\n  ctx.fillStyle = platform.color;\n  ctx.fillRect(platform.x, platform.y, platform.width, platform.height);\n});\n\n// Draw doors\nctx.fillStyle = doors.start.color;\nctx.fillRect(doors.start.x, doors.start.y, doors.start.width, doors.start.height);\n\nctx.fillStyle = doors.end.color;\nctx.fillRect(doors.end.x, doors.end.y, doors.end.width, doors.end.height);\n\n// Draw power-ups\npowerUps.forEach(powerUp => {\n  if (powerUp.active) {\n    ctx.fillStyle = powerUp.color;\n    ctx.beginPath();\n    ctx.arc(powerUp.x, powerUp.y, powerUp.radius, 0, Math.PI * 2);\n    ctx.fill();\n    \n    // Add glow effect\n    ctx.shadowColor = powerUp.color;\n    ctx.shadowBlur = 10;\n    ctx.strokeStyle = '#fff';\n    ctx.lineWidth = 2;\n    ctx.stroke();\n    ctx.shadowBlur = 0;\n    \n    // Add icon based on type\n    ctx.fillStyle = '#fff';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.font = '10px Arial';\n    \n    switch (powerUp.type) {\n      case 'health':\n        ctx.fillText('+', powerUp.x, powerUp.y);\n        break;\n      case 'energy':\n        ctx.fillText('E', powerUp.x, powerUp.y);\n        break;\n      default:\n        break;\n    }\n  }\n});\n\n// Draw projectiles\nprojectiles.forEach(projectile => {\n  ctx.fillStyle = projectile.color;\n  ctx.beginPath();\n  ctx.arc(projectile.x, projectile.y, projectile.radius, 0, Math.PI * 2);\n  ctx.fill();\n  \n  // Add trail effect\n  ctx.globalAlpha = 0.5;\n  ctx.beginPath();\n  ctx.arc(projectile.x - projectile.vx, projectile.y - projectile.vy, projectile.radius * 0.8, 0, Math.PI * 2);\n  ctx.fill();\n  ctx.globalAlpha = 0.3;\n  ctx.beginPath();\n  ctx.arc(projectile.x - projectile.vx * 2, projectile.y - projectile.vy * 2, projectile.radius * 0.6, 0, Math.PI * 2);\n  ctx.fill();\n  ctx.globalAlpha = 1.0;\n});\n\n// Draw drones\ndrones.forEach(drone => {\n  // Draw drone body\n  ctx.fillStyle = drone.color;\n  ctx.beginPath();\n  ctx.arc(drone.x, drone.y, drone.radius, 0, Math.PI * 2);\n  ctx.fill();\n  \n  // Add detail based on drone type\n  ctx.strokeStyle = '#000';\n  ctx.lineWidth = 1;\n  \n  if (drone.type === 'shooter' || drone.type === 'turret') {\n    // Draw shooter detail\n    ctx.beginPath();\n    ctx.arc(drone.x, drone.y, drone.radius * 0.7, 0, Math.PI * 2);\n    ctx.stroke();\n    \n    // Draw gun\n    const angle = Math.atan2(player.y - drone.y, player.x - drone.x);\n    ctx.beginPath();\n    ctx.moveTo(drone.x, drone.y);\n    ctx.lineTo(\n      drone.x + Math.cos(angle) * drone.radius * 1.2,\n      drone.y + Math.sin(angle) * drone.radius * 1.2\n    );\n    ctx.lineWidth = 3;\n    ctx.stroke();\n    ctx.lineWidth = 1;\n  } else if (drone.type === 'chaser') {\n    // Draw chaser detail\n    const angle = Math.atan2(player.y - drone.y, player.x - drone.x);\n    \n    // Draw triangular shape pointing at player\n    ctx.beginPath();\n    ctx.moveTo(\n      drone.x + Math.cos(angle) * drone.radius,\n      drone.y + Math.sin(angle) * drone.radius\n    );\n    ctx.lineTo(\n      drone.x + Math.cos(angle + 2.1) * drone.radius * 0.7,\n      drone.y + Math.sin(angle + 2.1) * drone.radius * 0.7\n    );\n    ctx.lineTo(\n      drone.x + Math.cos(angle - 2.1) * drone.radius * 0.7,\n      drone.y + Math.sin(angle - 2.1) * drone.radius * 0.7\n    );\n    ctx.closePath();\n    ctx.fillStyle = '#000';\n    ctx.fill();\n  } else if (drone.type === 'patroller' || drone.type === 'vertical') {\n    // Draw patroller detail - hexagon shape\n    ctx.beginPath();\n    for (let i = 0; i < 6; i++) {\n      const angle = (i * Math.PI * 2) / 6;\n      const x = drone.x + Math.cos(angle) * (drone.radius * 0.7);\n      const y = drone.y + Math.sin(angle) * (drone.radius * 0.7);\n      \n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n    ctx.closePath();\n    ctx.stroke();\n  } else if (drone.type === 'bouncer') {\n    // Draw bouncer detail - pulsing circle\n    const pulseSize = 0.5 + 0.2 * Math.sin(Date.now() / 200);\n    ctx.beginPath();\n    ctx.arc(drone.x, drone.y, drone.radius * pulseSize, 0, Math.PI * 2);\n    ctx.stroke();\n  } else if (drone.type === 'boss') {\n    // Draw boss detail\n    ctx.beginPath();\n    ctx.arc(drone.x, drone.y, drone.radius * 0.8, 0, Math.PI * 2);\n    ctx.stroke();\n    \n    // Draw spikes\n    for (let i = 0; i < 8; i++) {\n      const angle = (i * Math.PI * 2) / 8;\n      ctx.beginPath();\n      ctx.moveTo(drone.x, drone.y);\n      ctx.lineTo(\n        drone.x + Math.cos(angle) * drone.radius * 1.3,\n        drone.y + Math.sin(angle) * drone.radius * 1.3\n      );\n      ctx.stroke();\n    }\n    \n    // Draw health bar\n    if (drone.health) {\n      const healthWidth = drone.radius * 2;\n      const healthHeight = 5;\n      const healthX = drone.x - healthWidth / 2;\n      const healthY = drone.y - drone.radius - 10;\n      \n      ctx.fillStyle = '#555';\n      ctx.fillRect(healthX, healthY, healthWidth, healthHeight);\n      \n      ctx.fillStyle = '#f55';\n      ctx.fillRect(healthX, healthY, healthWidth * (drone.health / 100), healthHeight);\n    }\n  }\n  \n  // All drones show targeting line when about to shoot\n  if (drone.shootTimer > (drone.shootSpeed || 60) * 0.8) {\n    const angle = Math.atan2(player.y - drone.y, player.x - drone.x);\n    ctx.strokeStyle = drone.color;\n    ctx.globalAlpha = 0.5;\n    ctx.beginPath();\n    ctx.moveTo(drone.x, drone.y);\n    ctx.lineTo(\n      drone.x + Math.cos(angle) * 100,\n      drone.y + Math.sin(angle) * 100\n    );\n    ctx.stroke();\n    ctx.globalAlpha = 1.0;\n  }\n});\n\n// Draw player\nctx.fillStyle = player.color;\nctx.beginPath();\nctx.arc(player.x, player.y, player.radius, 0, Math.PI * 2);\nctx.fill();\n\n// Add detail to player\nctx.strokeStyle = '#000';\nctx.lineWidth = 2;\nctx.beginPath();\nctx.arc(player.x, player.y, player.radius * 0.7, 0, Math.PI * 2);\nctx.stroke();\n\n// Draw shield if active\nif (playerStats.shield) {\n  ctx.strokeStyle = '#f1c40f';\n  ctx.lineWidth = 3;\n  ctx.globalAlpha = 0.7;\n  ctx.beginPath();\n  ctx.arc(player.x, player.y, player.radius * 1.3, 0, Math.PI * 2);\n  ctx.stroke();\n  \n  // Add pulsing effect to shield\n  ctx.globalAlpha = 0.3;\n  ctx.fillStyle = '#f1c40f';\n  ctx.beginPath();\n  ctx.arc(player.x, player.y, player.radius * 1.3, 0, Math.PI * 2);\n  ctx.fill();\n  ctx.globalAlpha = 1.0;\n}\n\n// Reset camera transformation\nctx.restore();\n\n// UI elements - drawn without camera transformation\n// Draw level info\nctx.fillStyle = '#fff';\nctx.font = '18px Arial';\nctx.textAlign = 'center';\n\n\n// Draw health bar\nctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\nctx.fillRect(20, 20, 200, 20);\n\nctx.fillStyle = health > 50 ? '#2ecc71' : health > 25 ? '#f1c40f' : '#e74c3c';\nctx.fillRect(20, 20, health * 2, 20);\n\nctx.strokeStyle = '#fff';\nctx.lineWidth = 2;\nctx.strokeRect(20, 20, 200, 20);\n\n// Health text\nctx.fillStyle = energy > 0 ? '#fff' : '#f55'; // Red text when energy is 0 to warn player\nctx.font = '16px Arial';\nctx.textAlign = 'left';\nctx.fillText(`Health: ${Math.floor(health)}%`, 25, 36);\n\n// Energy bar\nctx.fillStyle = 'rgba(0, 0, 0, 0.5)';\nctx.fillRect(20, 50, 200, 20);\n\nctx.fillStyle = energy > 20 ? '#3498db' : '#e74c3c'; // Red when energy is low\nctx.fillRect(20, 50, energy * 2, 20);\n\nctx.strokeStyle = '#fff';\nctx.lineWidth = 2;\nctx.strokeRect(20, 50, 200, 20);\n\n// Energy text\nctx.fillStyle = energy > 20 ? '#fff' : '#ffff00'; // Yellow warning text when low\nctx.font = '16px Arial';\nctx.textAlign = 'left';\nctx.fillText(`Energy: ${Math.floor(energy)}%`, 25, 66);\n\n// Show warning when energy is depleted\nif (energy <= 0) {\n  ctx.fillStyle = '#e74c3c';\n  ctx.font = 'bold 14px Arial';\n  ctx.fillText('WARNING: Health draining!', 25, 90);\n}\n\n// Mini-map (top-right corner)\nconst mapWidth = 150;\nconst mapHeight = 100;\nconst mapX = canvas.width - mapWidth - 20;\nconst mapY = 20;\n\n// Draw mini-map background\nctx.fillStyle = 'rgba(0, 0, 0, 0.3)';\nctx.fillRect(mapX, mapY, mapWidth, mapHeight);\nctx.strokeStyle = '#000';\nctx.strokeRect(mapX, mapY, mapWidth, mapHeight);\n\n// Scale factors for the mini-map\nconst scaleX = mapWidth / worldSize.width;\nconst scaleY = mapHeight / worldSize.height;\n\n// Draw player on mini-map\nctx.fillStyle = player.color;\nctx.beginPath();\nctx.arc(\n  mapX + player.x * scaleX,\n  mapY + player.y * scaleY,\n  3, 0, Math.PI * 2\n);\nctx.fill();\n\n// Draw start and end doors on mini-map\nctx.fillStyle = doors.start.color;\nctx.fillRect(\n  mapX + doors.start.x * scaleX,\n  mapY + doors.start.y * scaleY,\n  doors.start.width * scaleX,\n  doors.start.height * scaleY\n);\n\nctx.fillStyle = doors.end.color;\nctx.fillRect(\n  mapX + doors.end.x * scaleX,\n  mapY + doors.end.y * scaleY,\n  doors.end.width * scaleX,\n  doors.end.height * scaleY\n);\n\n// Draw viewport rectangle on mini-map\nctx.strokeStyle = '#fff';\nctx.strokeRect(\n  mapX + camera.x * scaleX,\n  mapY + camera.y * scaleY,\n  canvasSize.width * scaleX,\n  canvasSize.height * scaleY\n);\n\n// Game over overlay\nif (gameState === 'gameOver') {\n  ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  \n  ctx.fillStyle = '#e74c3c';\n  ctx.font = 'bold 36px Arial';\n  ctx.textAlign = 'center';\n  ctx.fillText('GAME OVER', canvas.width / 2, canvas.height / 3);\n  \n  ctx.fillStyle = '#fff';\n  ctx.font = '24px Arial';\n  ctx.fillText('Press SPACE to Restart', canvas.width / 2, canvas.height / 2);\n} else if (gameState === 'win') {\n  ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  \n  ctx.fillStyle = '#2ecc71';\n  ctx.font = 'bold 36px Arial';\n  ctx.textAlign = 'center';\n  ctx.fillText('LEVEL COMPLETE!', canvas.width / 2, canvas.height / 3);\n  \n  // FIX: Display the correct next level name based on the index\n  const currentLevelIndex = levels[currentLevel].index;\n  const nextLevelIndex = (currentLevelIndex + 1) % levels.length;\n  const nextLevel = levels.find(level => level.index === nextLevelIndex);\n  \n  ctx.fillStyle = '#fff';\n  ctx.font = '24px Arial';\n  ctx.fillText(`Proceeding to ${nextLevel.name}...`, canvas.width / 2, canvas.height / 2);\n}\n}\n}, [gameState, platforms, doors, player, drones, projectiles, powerUps, health, energy, playerStats, camera, worldSize.width, worldSize.height, canvasSize.width, canvasSize.height, currentLevel, levels, infoText, showInfo]);\n  \nreturn (\n  <div style={{ \n    color: '#eee', \n    backgroundColor: '#222',\n    padding: '20px',\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  }}>\n    <header>\n      <h1 style={{ color: '#36f9f6', margin: '0 0 20px 0', fontFamily: 'monospace', textShadow: '2px 2px #000' }}>VIET-GON</h1>\n      <h2 style={{ color: '#f55', margin: '-15px 0 20px 0', fontFamily: 'monospace', fontSize: '18px' }}>Vietnam War Battles</h2>\n    </header>\n    \n    <main>\n      <canvas\n        ref={canvasRef}\n        width={canvasSize.width}\n        height={canvasSize.height}\n        style={{\n          backgroundColor: '#111',\n          borderRadius: '5px',\n          boxShadow: '0 0 20px rgba(54, 249, 246, 0.5)' // Enhanced cyan glow\n        }}\n      />\n      \n      <div style={{ marginTop: '15px', display: 'flex', gap: '10px' }}>\n        <button \n          style={{\n            padding: '8px 15px',\n            border: 'none',\n            borderRadius: '4px',\n            backgroundColor: '#36f9f6',\n            color: '#111',\n            fontWeight: 'bold',\n            cursor: 'pointer',\n            fontFamily: 'monospace'\n          }}\n          onClick={startNewGame}\n        >\n          START GAME\n        </button>\n        \n        <button \n          style={{\n            padding: '8px 15px',\n            border: 'none',\n            borderRadius: '4px',\n            backgroundColor: '#f55',\n            color: '#fff',\n            fontWeight: 'bold',\n            cursor: 'pointer',\n            fontFamily: 'monospace'\n          }}\n          onClick={() => {\n            if (gameState === 'playing') {\n              stopMusic();\n              setGameState('menu');\n            }\n          }}\n        >\n          MENU\n        </button>\n      </div>\n    </main>\n    \n    <footer style={{ fontSize: '0.9rem', color: '#aaa', marginTop: '20px', fontFamily: 'monospace' }}>\n      <p>Use arrow keys or WASD to move and jump. Hold mouse button for shield (drains energy).</p>\n      <p>When energy is depleted, health will drain! Don't fall off platforms!</p>\n      <p>Collect power-ups and reach the red door to win.</p>\n      <p style={{ color: '#f55' }}>Experience legendary battles of the Vietnam War in this n-gon style platformer.</p>\n    </footer>\n  </div>\n);\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}